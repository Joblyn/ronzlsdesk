{"version":3,"sources":["components/Page.js","utils/colors.js","assets/img/bg/background_1920-11.jpg","assets/img/bg/background_1920-18.jpg","assets/img/bg/background_640-1.jpg","assets/img/bg/background_640-3.jpg","assets/img/users/100_1.jpg","assets/img/bg/background_1920-5.jpg","assets/img/bg/background_1920-6.jpg","assets/img/bg/background_1920-7.png","assets/img/bg/background_1920-19.jpg","demos/cardPage.js","demos/chartjs.js","../node_modules/reactstrap/es/CardLink.js","pages/super/adminCardPage.js"],"names":["bem","bn","create","Page","_ref","breadcrumbs","Tag","tag","className","children","restProps","Object","_home_joblyn_Desktop_asiwajudev_crm_2016698b9caf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","title","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","module","exports","p","overlayCards","imgUrl","bg5Image","bg6Image","bg7Image","bg19Image","bgCards","color","gradientCards","getStackLineChart","labels","data","canvas","gradient","getContext","createLinearGradient","addColorStop","ChartJS","helpers","alpha","rgbString","datasets","label","borderColor","backgroundColor","fill","stackLineChartOptions","tooltips","intersect","animation","duration","scales","xAxes","display","yAxes","legend","propTypes","utils","innerRef","prop_types_default","oneOfType","object","func","string","cssModule","CardLink_CardLink","props","attributes","objectWithoutPropertiesLoose","classnames_default","react_default","esm_extends","ref","es_CardLink","CardPageAdmin","Row","Col","md","sm","xs","es_Card","CardImg","src","bg1Image","style","width","height","CardBody","CardTitle","CardText","bg3Image","top","bg11Image","bg18Image","ListGroup","flush","ListGroupItem","href","inverse","Button","outline","alt","CardImgOverlay","Card","avatar","user1Image","subtitle","text","es","options","position","lg","_ref3"],"mappings":"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","file":"static/js/8.908e1c84.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n// import Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  // title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {/* {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )} */}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    }),\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","module.exports = __webpack_public_path__ + \"static/media/background_1920-11.b7f68e8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-18.acfe7046.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_640-1.1420d15b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_640-3.55e47e98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_1.1f7beca5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-5.1d98ff2e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-6.1e0eb550.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-7.abf47fc1.png\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-19.22fc19f2.jpg\";","import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nimport bg5Image from 'assets/img/bg/background_1920-5.jpg';\nimport bg6Image from 'assets/img/bg/background_1920-6.jpg';\nimport bg7Image from 'assets/img/bg/background_1920-7.png';\nimport bg19Image from 'assets/img/bg/background_1920-19.jpg';\n\nexport const overlayCards = [\n  { imgUrl: bg5Image },\n  { imgUrl: bg6Image },\n  { imgUrl: bg7Image },\n  { imgUrl: bg19Image },\n];\n\nexport const bgCards = [\n  { color: 'primary' },\n  { color: 'secondary' },\n  { color: 'info' },\n  { color: 'warning' },\n  { color: 'danger' },\n  { color: 'success' },\n];\n\nexport const gradientCards = [\n  { color: 'primary' },\n  { color: 'secondary' },\n  { color: 'info' },\n  { color: 'warning' },\n  { color: 'danger' },\n  { color: 'success' },\n];\n\nexport const chartjs = {\n  line1Props: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          borderColor: getColor('secondary'),\n          backgroundColor: getColor('secondary'),\n          data: [0, 13, 22, 34, 46, 35, 30],\n          fill: 'origin',\n        },\n      ],\n    },\n    options: {\n      tooltips: {\n        intersect: false,\n      },\n      animation: {\n        duration: 0,\n      },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [{ display: false }],\n      },\n      legend: {\n        display: false,\n      },\n      elements: {\n        line: {\n          tension: 0, // disables bezier curves\n        },\n      },\n    },\n  },\n\n  line2Props: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          borderColor: '#6a82fb',\n          backgroundColor: '#bcc7ff',\n          data: [0, 13, 22, 34, 46, 35, 30],\n          fill: 'origin',\n        },\n      ],\n    },\n    options: {\n      tooltips: {\n        intersect: false,\n      },\n      animation: {\n        duration: 0,\n      },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [{ display: false }],\n      },\n      legend: {\n        display: false,\n      },\n      elements: {\n        line: {\n          tension: 0, // disables bezier curves\n        },\n      },\n    },\n  },\n\n  line3Props: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          borderColor: '#6a82fb',\n          backgroundColor: '#bcc7ff',\n          data: [0, 13, 22, 34, 46, 35, 30],\n          fill: 'origin',\n        },\n      ],\n    },\n    options: {\n      tooltips: {\n        intersect: false,\n      },\n      // animation: {\n      //   duration: 0,\n      // },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [{ display: false }],\n      },\n      legend: {\n        display: false,\n      },\n      elements: {\n        line: {\n          tension: 0, // disables bezier curves\n        },\n      },\n    },\n  },\n};\n\nexport const chartJsGradient = {\n  line1Props: {\n    data: canvas => {\n      const ctx = canvas.getContext('2d');\n      let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n      gradient.addColorStop(\n        0,\n        ChartJS.helpers.color('#00c5dc').alpha(0.7).rgbString(),\n      );\n      gradient.addColorStop(\n        1,\n        ChartJS.helpers.color('#f2feff').alpha(0).rgbString(),\n      );\n\n      return {\n        labels: [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'January',\n          'February',\n          'March',\n          'April',\n        ],\n        datasets: [\n          {\n            label: 'Sales Stats',\n            backgroundColor: gradient, // Put the gradient here as a fill color\n            borderColor: '#0dc8de',\n\n            pointBackgroundColor: ChartJS.helpers\n              .color('#ffffff')\n              .alpha(0)\n              .rgbString(),\n            pointBorderColor: ChartJS.helpers\n              .color('#ffffff')\n              .alpha(0)\n              .rgbString(),\n            pointHoverBackgroundColor: '#28a745',\n            pointHoverBorderColor: ChartJS.helpers\n              .color('#000000')\n              .alpha(0.2)\n              .rgbString(),\n\n            //fill: 'start',\n            data: [\n              20,\n              10,\n              18,\n              15,\n              26,\n              18,\n              15,\n              22,\n              16,\n              12,\n              12,\n              13,\n              10,\n              18,\n              14,\n              24,\n              16,\n              12,\n              19,\n              21,\n              16,\n              14,\n              21,\n              21,\n              13,\n              15,\n              22,\n              24,\n              21,\n              11,\n              14,\n              19,\n              21,\n              17,\n            ],\n          },\n        ],\n      };\n    },\n    type: 'line',\n    options: {\n      title: {\n        display: false,\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n        xPadding: 10,\n        yPadding: 10,\n        caretPadding: 10,\n      },\n      legend: {\n        display: false,\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n            gridLines: false,\n            scaleLabel: {\n              display: true,\n              labelString: 'Month',\n            },\n          },\n        ],\n        yAxes: [\n          {\n            display: false,\n            gridLines: false,\n            scaleLabel: {\n              display: true,\n              labelString: 'Value',\n            },\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n      elements: {\n        line: {\n          tension: 0.19,\n        },\n        point: {\n          radius: 4,\n          borderWidth: 12,\n        },\n      },\n      layout: {\n        padding: {\n          left: 0,\n          right: 0,\n          top: 5,\n          bottom: 0,\n        },\n      },\n    },\n  },\n};\n","import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nexport const getStackLineChart = ({ labels, data }) => canvas => {\n  const ctx = canvas.getContext('2d');\n  let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n  gradient.addColorStop(\n    0,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(1)\n      .rgbString()\n  );\n  gradient.addColorStop(\n    1,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(0.2)\n      .rgbString()\n  );\n\n  return {\n    labels,\n    datasets: [\n      {\n        data,\n        label: 'My First dataset',\n        borderColor: getColor('primary'),\n        backgroundColor: gradient,\n        fill: 'origin',\n      },\n    ],\n  };\n};\n\nexport const stackLineChartOptions = {\n  tooltips: {\n    intersect: false,\n  },\n  animation: {\n    duration: 0,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n    yAxes: [{ display: false }],\n  },\n  legend: {\n    display: false,\n  },\n  // elements: {\n  //   line: {\n  //     tension: 0, // disables bezier curves\n  //   },\n  // },\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar CardLink = function CardLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-link'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n};\n\nCardLink.propTypes = propTypes;\nCardLink.defaultProps = defaultProps;\nexport default CardLink;","import bg11Image from 'assets/img/bg/background_1920-11.jpg';\nimport bg18Image from 'assets/img/bg/background_1920-18.jpg';\nimport bg1Image from 'assets/img/bg/background_640-1.jpg';\nimport bg3Image from 'assets/img/bg/background_640-3.jpg';\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport { UserCard } from 'components/Card';\nimport Page from 'components/Page';\nimport { bgCards, gradientCards, overlayCards } from 'demos/cardPage';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardImgOverlay,\n  CardLink,\n  CardText,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\n\nconst CardPageAdmin = () => {\n  return (\n    <Page title=\"Cards\" breadcrumbs={[{ name: 'cards', active: true }]}>\n      <Row>\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card className=\"flex-row\">\n            <CardImg\n              className=\"card-img-left\"\n              src={bg1Image}\n              style={{ width: 'auto', height: 150 }}\n            />\n            <CardBody>\n              <CardTitle>Horizontal Image Card(Left)</CardTitle>\n              <CardText>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card className=\"flex-row\">\n            <CardBody>\n              <CardTitle>Horizontal Image Card(Right)</CardTitle>\n              <CardText>Some quick example card</CardText>\n            </CardBody>\n            <CardImg\n              className=\"card-img-right\"\n              src={bg3Image}\n              style={{ width: 'auto', height: 150 }}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card>\n            <CardImg top src={bg11Image} />\n            <CardBody>\n              <CardTitle>Card with image</CardTitle>\n              <CardText>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card>\n            <CardImg top src={bg18Image} />\n            <CardBody>\n              <CardTitle>Card with list group</CardTitle>\n              <CardText>\n                This example shows how to use card with list group{' '}\n              </CardText>\n            </CardBody>\n            <ListGroup flush>\n              <ListGroupItem>Cras justo odio</ListGroupItem>\n              <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\n              <ListGroupItem>Morbi leo risus</ListGroupItem>\n            </ListGroup>\n            <CardBody>\n              <CardLink tag=\"a\" href=\"#\">\n                Go to details\n              </CardLink>\n              <CardLink tag=\"a\" href=\"#\">\n                More\n              </CardLink>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        {['', 'top', 'left', 'right'].map((color, index) => (\n          <Col key={index} md={6} sm={6} xs={12} className=\"mb-3\">\n            <Card\n              inverse\n              className={`border-0 bg-gradient-theme${\n                !!color ? '-' : ''\n              }${color}`}\n              style={{\n                height: 200,\n              }}\n            >\n              <CardBody className=\"d-flex flex-column justify-content-start align-items-start\">\n                <CardTitle>Card title</CardTitle>\n                <CardText>card text</CardText>\n              </CardBody>\n\n              <CardBody className=\"d-flex justify-content-between align-items-center\">\n                <CardText>Karl David</CardText>\n                <Button outline color=\"light\">\n                  Click\n                </Button>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      <Row>\n        {overlayCards.map(({ imgUrl }, index) => {\n          return (\n            <Col key={index} md={6} sm={6} xs={12}>\n              <Card inverse className=\"text-center\">\n                <CardImg width=\"100%\" src={imgUrl} alt=\"Card image cap\" />\n                <CardImgOverlay>\n                  <CardTitle>Card Title</CardTitle>\n                  <CardText>inversed card</CardText>\n                  <CardText>\n                    <small className=\"text-muted\">\n                      Last updated 3 mins ago\n                    </small>\n                  </CardText>\n                </CardImgOverlay>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n\n      <Row>\n        <Col md={5}>\n          <UserCard\n            avatar={user1Image}\n            title=\"Chris\"\n            subtitle=\"Project Lead\"\n            text=\"Give me a star!\"\n            style={{\n              height: 300,\n            }}\n          />\n        </Col>\n\n        <Col md={7}>\n          <Card>\n            <Line\n              data={getStackLineChart({\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                ],\n                data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n              })}\n              options={stackLineChartOptions}\n            />\n            <CardBody className=\"text-primary\" style={{ position: 'absolute' }}>\n              <CardTitle>Chart Card</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        {bgCards.map(({ color }, index) => (\n          <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\n            <Card inverse color={color}>\n              <CardBody>\n                <CardTitle className=\"text-capitalize\">\n                  {color} card title\n                </CardTitle>\n                <CardText>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      <Row>\n        {gradientCards.map(({ color }, index) => (\n          <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\n            <Card\n              inverse\n              className={`bg-gradient-${color} text-center`}\n              style={{ height: 200 }}\n            >\n              <CardBody className=\"d-flex flex-column flex-wrap justify-content-center align-items-center\">\n                <CardTitle>Gradient {color} title</CardTitle>\n                <CardText>card text</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Page>\n  );\n};\n\nexport default CardPageAdmin;\n"],"sourceRoot":""}