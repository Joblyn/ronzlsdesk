{"version":3,"sources":["pages/user/DashboardPage.js"],"names":["today","Date","lastWeek","getFullYear","getMonth","getDate","DashboardPage","window","scrollTo","primaryColor","getColor","secondaryColor","react__WEBPACK_IMPORTED_MODULE_15___default","a","createElement","components_Page__WEBPACK_IMPORTED_MODULE_8__","className","title","breadcrumbs","name","active","reactstrap__WEBPACK_IMPORTED_MODULE_19__","reactstrap__WEBPACK_IMPORTED_MODULE_20__","lg","md","sm","xs","components_Widget__WEBPACK_IMPORTED_MODULE_12__","subtitle","number","color","progress","value","label","reactstrap__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","reactstrap__WEBPACK_IMPORTED_MODULE_23__","react_chartjs_2__WEBPACK_IMPORTED_MODULE_16__","data","chartjs","line","options","bar","reactstrap__WEBPACK_IMPORTED_MODULE_24__","flush","reactstrap__WEBPACK_IMPORTED_MODULE_25__","react_icons_md__WEBPACK_IMPORTED_MODULE_17__","size","reactstrap__WEBPACK_IMPORTED_MODULE_26__","reactstrap__WEBPACK_IMPORTED_MODULE_27__","style","marginBottom","bgColor","inverse","icon","MdThumbUp","MdRateReview","MdShare","productsData","map","_ref","id","image","description","right","components_ProductMedia__WEBPACK_IMPORTED_MODULE_9__","key","components_UserProgressTable__WEBPACK_IMPORTED_MODULE_11__","headers","usersData","userProgressTableData","getStackLineChart","labels","stackLineChartOptions","position","reactstrap__WEBPACK_IMPORTED_MODULE_28__","reverse","react_infinite_calendar__WEBPACK_IMPORTED_MODULE_18__","selected","minDate","width","theme","accentColor","floatingNav","background","chevron","headerColor","selectionColor","textColor","default","todayColor","weekdayColor","components_MapWithBubbles__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_29__","body","overflowX","paddingBottom","height","paddingTop","components_HorizontalAvatarList__WEBPACK_IMPORTED_MODULE_6__","avatars","avatarsData","avatarProps","reversed","components_Card__WEBPACK_IMPORTED_MODULE_5__","header","avatarSize","date","text","buttonProps","children","reactstrap__WEBPACK_IMPORTED_MODULE_30__","supportTicketsData","supportTicket","components_SupportTicket__WEBPACK_IMPORTED_MODULE_10__","Object","assign","todos","todosData","React","Component"],"mappings":"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","file":"static/js/75.93275500.chunk.js","sourcesContent":["import { AnnouncementCard, TodosCard } from 'components/Card';\nimport HorizontalAvatarList from 'components/HorizontalAvatarList';\nimport MapWithBubbles from 'components/MapWithBubbles';\nimport Page from 'components/Page';\nimport ProductMedia from 'components/ProductMedia';\nimport SupportTicket from 'components/SupportTicket';\nimport UserProgressTable from 'components/UserProgressTable';\nimport { IconWidget, NumberWidget } from 'components/Widget';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport {\n  avatarsData,\n  chartjs,\n  productsData,\n  supportTicketsData,\n  todosData,\n  userProgressTableData,\n} from 'demos/dashboardPage';\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  MdBubbleChart,\n  MdInsertChart,\n  MdPersonPin,\n  MdPieChart,\n  MdRateReview,\n  MdShare,\n  MdShowChart,\n  MdThumbUp,\n} from 'react-icons/md';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardDeck,\n  CardGroup,\n  CardHeader,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\nimport { getColor } from 'utils/colors';\n\nconst today = new Date();\nconst lastWeek = new Date(\n  today.getFullYear(),\n  today.getMonth(),\n  today.getDate() - 7,\n);\n\nclass DashboardPage extends React.Component {\n  componentDidMount() {\n    // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n\n    return (\n      <Page\n        className=\"DashboardPage\"\n        title=\"Dashboard\"\n        breadcrumbs={[{ name: 'Dashboard', active: true }]}\n      >\n        <Row>\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Profit\"\n              subtitle=\"This month\"\n              number=\"9.8k\"\n              color=\"secondary\"\n              progress={{\n                value: 75,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Monthly Visitors\"\n              subtitle=\"This month\"\n              number=\"5,400\"\n              color=\"secondary\"\n              progress={{\n                value: 45,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"New Users\"\n              subtitle=\"This month\"\n              number=\"3,400\"\n              color=\"secondary\"\n              progress={{\n                value: 90,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Bounce Rate\"\n              subtitle=\"This month\"\n              number=\"38%\"\n              color=\"secondary\"\n              progress={{\n                value: 60,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                Total Revenue{' '}\n                <small className=\"text-muted text-capitalize\">This year</small>\n              </CardHeader>\n              <CardBody>\n                <Line data={chartjs.line.data} options={chartjs.line.options} />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Total Expense</CardHeader>\n              <CardBody>\n                <Bar data={chartjs.bar.data} options={chartjs.bar.options} />\n              </CardBody>\n              <ListGroup flush>\n                <ListGroupItem>\n                  <MdInsertChart size={25} color={primaryColor} /> Cost of sales{' '}\n                  <Badge color=\"secondary\">$3000</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdBubbleChart size={25} color={primaryColor} /> Management\n                  costs <Badge color=\"secondary\">$1200</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdShowChart size={25} color={primaryColor} /> Financial costs{' '}\n                  <Badge color=\"secondary\">$800</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdPieChart size={25} color={primaryColor} /> Other operating\n                  costs <Badge color=\"secondary\">$2400</Badge>\n                </ListGroupItem>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardGroup style={{ marginBottom: '1rem' }}>\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdThumbUp}\n            title=\"50+ Likes\"\n            subtitle=\"People you like\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdRateReview}\n            title=\"10+ Reviews\"\n            subtitle=\"New Reviews\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdShare}\n            title=\"30+ Shares\"\n            subtitle=\"New Shares\"\n          />\n        </CardGroup>\n\n        <Row>\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Products</CardHeader>\n              <CardBody>\n                {productsData.map(\n                  ({ id, image, title, description, right }) => (\n                    <ProductMedia\n                      key={id}\n                      image={image}\n                      title={title}\n                      description={description}\n                      right={right}\n                    />\n                  ),\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Users</CardHeader>\n              <CardBody>\n                <UserProgressTable\n                  headers={[\n                    <MdPersonPin size={25} />,\n                    'name',\n                    'date',\n                    'participation',\n                    '%',\n                  ]}\n                  usersData={userProgressTableData}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Sales\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [10000, 15000, 5000, 10000, 5000, 10000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Revenue\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000].reverse(),\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute', right: 0 }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Profit\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <InfiniteCalendar\n              selected={today}\n              minDate={lastWeek}\n              width=\"100%\"\n              theme={{\n                accentColor: primaryColor,\n                floatingNav: {\n                  background: secondaryColor,\n                  chevron: primaryColor,\n                  color: '#FFF',\n                },\n                headerColor: primaryColor,\n                selectionColor: secondaryColor,\n                textColor: {\n                  active: '#FFF',\n                  default: '#333',\n                },\n                todayColor: secondaryColor,\n                weekdayColor: primaryColor,\n              }}\n            />\n          </Col>\n\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card inverse className=\"bg-gradient-primary\">\n              <CardHeader className=\"bg-gradient-primary\">\n                Map with bubbles\n              </CardHeader>\n              <CardBody>\n                <MapWithBubbles />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardDeck style={{ marginBottom: '1rem' }}>\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n            />\n          </Card>\n\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n              reversed\n            />\n          </Card>\n        </CardDeck>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <AnnouncementCard\n              color=\"gradient-secondary\"\n              header=\"Announcement\"\n              avatarSize={60}\n              name=\"Jamy\"\n              date=\"1 hour ago\"\n              text=\"Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy euismod tinciduntut laoreet doloremagna\"\n              buttonProps={{\n                children: 'show',\n              }}\n              style={{ height: 500 }}\n            />\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <span>Support Tickets</span>\n                  <Button>\n                    <small>View All</small>\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardBody>\n                {supportTicketsData.map(supportTicket => (\n                  <SupportTicket key={supportTicket.id} {...supportTicket} />\n                ))}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <TodosCard todos={todosData} />\n          </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n"],"sourceRoot":""}