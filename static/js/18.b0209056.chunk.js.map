{"version":3,"sources":["components/Page.js","components/table/Search.js","components/table/CustomTable.js","actions/admin/clients/Clients.js","pages/super/document.js"],"names":["bem","bn","create","Page","_ref","breadcrumbs","Tag","tag","className","children","restProps","Object","_home_joblyn_Desktop_asiwajudev_crm_2016698b9caf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","title","Search","handleSearchChange","react_default","style","marginBottom","type","class","placeholder","onChange","icons_search","iconComponent","props","chevron_down","color","paddingRight","paddingLeft","useStyles","makeStyles","theme","root","width","small","spacing","height","container","maxHeight","paginationContainer","marginTop","rowPageContainer","StyledTableRow","withStyles","&:nth-of-type(odd)","backgroundColor","palette","action","hover","TableRow","BootstrapInput","label + &","input","borderRadius","position","border","fontSize","padding","transition","transitions","fontFamily","join","&:focus","InputBase","CustomTable","pagination","search","pagerows","rows","columns","actions","handleLinkClick","handleActionClick","id","refs","withEmoji","useRef","_React$useState","React","useState","_React$useState2","slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","items","setItems","_React$useState7","_React$useState8","count","setCount","_React$useState9","_React$useState10","filter","setFilter","console","log","event","target","value","getActionIconType","trash_2","edit","play_circle","pause_circle","paperclip","check_circle","x_circle","Grid","display","flexDirection","item","justify","alignItems","table_Search","toLowerCase","includes","Math","ceil","Paper","elevation","TableContainer","Table","TableHead","table_head","nColumn","nActions","nColumns","column","TableCell","align","minWidth","label","renderTableColumns","TableBody","ref","slice","row","role","tabIndex","cell","onClick","cursor","justifyContent","Avatar","src","i","IconButton","aria-label","component","paddingTop","paddingBottom","objectSpread","renderTableRows","Pagination","shape","showFirstButton","showLastButton","FormControl","Select","labelId","IconComponent","MenuItem","__webpack_require__","d","__webpack_exports__","setAdminClients","adminGetClients","getAppointments","confirmAppointment","getClient","getClientDetails","updateClientSubscription","getAllDocuments","getDocumentsSentToUser","getDocumentsReceivedFromUser","getAllRequests","_Types__WEBPACK_IMPORTED_MODULE_0__","_Services__WEBPACK_IMPORTED_MODULE_1__","payload","ActionType","onGetClient","onGetClientDetails","onUpdateClientSubscription","onGetAllDocuments","onGetDocumentsSentToUser","onGetDocumentsReceivedFromUser","onGetAllRequests","onAdminGetClients","onGetAppoinments","onConfirmAppoinment","url","getDataWithToken","postDataWithToken","r","components_Page__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","n","reactstrap__WEBPACK_IMPORTED_MODULE_2__","_components_PageSpinner__WEBPACK_IMPORTED_MODULE_3__","_components_table_CustomTable__WEBPACK_IMPORTED_MODULE_4__","_actions_admin_clients_Clients__WEBPACK_IMPORTED_MODULE_5__","_apiConstants_apiConstants__WEBPACK_IMPORTED_MODULE_6__","react_redux__WEBPACK_IMPORTED_MODULE_7__","Documents","dispatch","useDispatch","adminGetAllDocuments","useSelector","state","useEffect","adminGetDocuments","isSuccessful","documents","overflowX","data","reverse","document","sender","receiver","companyName","fullName","push","client","admin","docName","date","created_dt","view","size","href","docContentUrl","getRows"],"mappings":"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","file":"static/js/18.b0209056.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n// import Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  // title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {/* {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )} */}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    }),\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from \"react\";\nimport * as Icon from \"react-feather\";\n\nconst Search = ({ handleSearchChange }) => {\n  return (\n    <div className=\"search hidden sm:block\" style={{ marginBottom: 30 }}>\n      <input\n        type=\"text\"\n        class=\"search__input input placeholder-theme-13\"\n        placeholder=\"Search\"\n        onChange={handleSearchChange}\n      />\n      {/* <i data-feather=\"search\" className=\"search__icon\"></i> */}\n      <Icon.Search className=\"search__icon\" />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Pagination from '@material-ui/lab/Pagination';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport * as Icon from 'react-feather';\n\nimport Search from './Search';\nimport { Avatar } from '@material-ui/core';\n\nconst iconComponent = props => {\n  return (\n    <Icon.ChevronDown\n      className={props.className}\n      style={{ color: 'white', paddingRight: 5, paddingLeft: 5 }}\n    />\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  container: {\n    maxHeight: 900,\n    // maxWidth: 980,\n  },\n  paginationContainer: {\n    marginTop: 20,\n    height: 32,\n  },\n\n  rowPageContainer: {\n    height: '2px',\n  },\n}));\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n    height: '10px',\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n\n    backgroundColor: '#f50057', //theme.palette.background.paper,\n    color: '#fff',\n    border: '1px solid #ced4da',\n    fontSize: '0.875rem',\n    padding: '5px 26px 5px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['Poppins'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      //borderColor: '#80bdff',\n      // boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      backgroundColor: '#f50057', //theme.palette.background.paper,\n      color: '#fff',\n    },\n  },\n}))(InputBase);\n\nexport default function CustomTable({\n  pagination,\n  search,\n  pagerows,\n  rows,\n  columns,\n  actions,\n  handleLinkClick,\n  handleActionClick,\n  id,\n  withEmoji,\n}) {\n  const refs = useRef(0);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(1);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState(rows);\n  const [count, setCount] = React.useState(items.length / rowsPerPage);\n  const [filter, setFilter] = React.useState('Name');\n  console.log(filter);\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n  const handleChangeRowsPerPage = event => {\n    setPage(1);\n    setRowsPerPage(+event.target.value);\n  };\n  const handleSearchChange = event => {\n    let value = event.target.value.toLowerCase();\n    if (value) {\n      let search = rows.filter(item => item.name.toLowerCase().includes(value));\n\n      setItems(search);\n      // Need to correct our pagination to adapt to new search result\n      setPage(1);\n      setCount(Math.ceil(search.length / rowsPerPage));\n    } else {\n      // On search empty put everything back to initial stage\n      setItems(rows);\n      setPage(1);\n      setCount(Math.ceil(rows.length / rowsPerPage));\n    }\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  console.log(handleFilterChange);\n  const renderTableColumns = () => {\n    let nColumn = null;\n    let nActions = null;\n    let nEmoji = null;\n    console.log(nEmoji);\n\n    const nColumns = columns.map(column => {\n      nColumn = column;\n\n      return (\n        <TableCell\n          key={column.id + id}\n          align={column.align}\n          style={{ minWidth: column.minWidth, fontSize: column.fontSize }}\n        >\n          {column.label}\n        </TableCell>\n      );\n    });\n\n    if (actions) {\n      nActions = (\n        <TableCell\n          key={nColumn.id + id}\n          align={nColumn.align}\n          style={{ minWidth: nColumn.minWidth, fontSize: nColumn.fontSize }}\n        >\n          Actions\n        </TableCell>\n      );\n    }\n    // if (withEmoji) {\n    //   nEmoji = (\n    //     <TableCell\n    //       key={nColumn.id + id}\n    //       align={nColumn.align}\n    //       style={{ minWidth: nColumn.minWidth }}\n    //     >\n    //       Preview\n    //     </TableCell>\n    //   );\n    // }\n    return (\n      <TableRow>\n        {nColumns}\n        {nActions}\n      </TableRow>\n    );\n  };\n  const renderTableRows = () => {\n    let nColumn = null;\n    return items\n      .slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\n      .map(row => {\n        return (\n          <StyledTableRow role=\"checkbox\" tabIndex={-1} key={row.id + 'Row'}>\n            {columns.map(column => {\n              nColumn = column;\n              const value = row[column.id];\n\n              return (\n                <TableCell\n                  key={column.id + 'Cell' + id}\n                  align={column.align}\n                  className={classes.cell}\n                  style={{\n                     color: column.color(value),\n                    // color: 'blue'\n                  }}\n                >\n                  {column.type && column.type === 'link' ? (\n                    <div\n                      color=\"inherit\"\n                      onClick={e => handleLinkClick(e, row)}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      {value}\n                    </div>\n                  ) : column.type && column.type === 'image' ? (\n                    <span\n                      style={{\n                        display: 'inline-flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <Avatar src={row.src && row.src} className=\"small\" />{''}\n                      <span className=\"px-4\">{value}</span>\n                    </span>\n                  ) : (\n                    value\n                  )}\n                </TableCell>\n              );\n            })}\n            {actions ? (\n              <TableCell key={nColumn.id + 'Cell'} align={nColumn.align}>\n                {actions.map((action, i) => {\n                  return (\n                    <IconButton\n                      key={i + 'Action' + id}\n                      aria-label=\"upload picture\"\n                      component=\"span\"\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\n                      onClick={e =>\n                        handleActionClick(e, { type: action, ...row })\n                      }\n                    >\n                      {getActionIconType(action, i)}\n                    </IconButton>\n                  );\n                })}\n              </TableCell>\n            ) : (\n              ''\n            )}\n          </StyledTableRow>\n        );\n      });\n  };\n\n  const getActionIconType = (type, index) => {\n    switch (type) {\n      case 'delete':\n        return <Icon.Trash2 key={index} color=\"red\" />;\n      case 'edit':\n        return <Icon.Edit key={index} color=\"black\" />;\n      case 'play':\n        return <Icon.PlayCircle key={index} color=\"black\" />;\n      case 'pause':\n        return <Icon.PauseCircle key={index} color=\"black\" />;\n      case 'attachment':\n        return <Icon.Paperclip key={index} color=\"blue\" />;\n      case 'correct':\n        return <Icon.CheckCircle key={index} color=\"green\" />;\n      case 'close':\n        return <Icon.XCircle key={index} color=\"red\" />;\n      default: \n      return null\n    }\n  };\n  return (\n    <Grid container={true} className=\"w-full\" style={{display:'flex', flexDirection:'column'}}>\n      <Grid item>\n        <Grid container={true} justify=\"space-between\" alignItems=\"flex-start\">\n          <Grid item>\n            {search ? <Search handleSearchChange={handleSearchChange} /> : ''}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Paper elevation={1}>\n          <TableContainer className={classes.container}>\n            <Table>\n              <TableHead className={classes.table_head}>\n                {renderTableColumns()}\n              </TableHead>\n              <TableBody ref={refs}>{renderTableRows()}</TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Grid>\n      <Grid item>\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"flex-start\"\n          className={classes.paginationContainer}\n        >\n          <Grid item>\n            {pagination ? (\n              <Pagination\n                color=\"secondary\"\n                shape=\"rounded\"\n                count={count}\n                page={page}\n                showFirstButton\n                showLastButton\n                onChange={handleChange}\n              />\n            ) : (\n              ''\n            )}\n          </Grid>\n          <Grid item>\n            {pagerows ? (\n              <FormControl\n                className={classes.rowPageContainer}\n                style={{ padding: 15 }}\n              >\n                <Select\n                  labelId=\"customized-select-label\"\n                  id=\"customized-select\"\n                  value={rowsPerPage}\n                  IconComponent={iconComponent}\n                  onChange={handleChangeRowsPerPage}\n                  input={<BootstrapInput />}\n                >\n                  <MenuItem value={5}>5</MenuItem>\n                  <MenuItem value={10}>10</MenuItem>\n                  <MenuItem value={20}>20</MenuItem>\n                  <MenuItem value={30}>30</MenuItem>\n                </Select>\n              </FormControl>\n            ) : (\n              ''\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import * as ActionType from '../../Types';\nimport { getDataWithToken, postDataWithToken } from '../../Services';\n\n// superadmin-client actions\nexport const setAdminClients = payload => {\n  return {\n    type: ActionType.SET_ADMIN_CLIENTS,\n    payload\n  };\n};\n\nconst onGetClient = payload => {\n  return {\n    type: ActionType.ADMIN_GET_CLIENT_SUCCESS,\n    payload: payload,\n  };\n};\n\nconst onGetClientDetails = payload => {\n  return {\n    type: ActionType.ADMIN_GET_CLIENT_DETAILS_SUCCESS,\n    payload: payload,\n  };\n};\n\nconst onUpdateClientSubscription = payload => {\n  return {\n    type: ActionType.ADMIN_UPDATE_CLIENT_SUBSRCIPTION,\n    payload\n  }\n}\n\nconst onGetAllDocuments = payload => {\n  return {\n    type: ActionType.ADMIN_GET_ALL_DOCUMENTS,\n    payload\n  }\n}\n\nconst onGetDocumentsSentToUser = payload => {\n  return {\n    type: ActionType.ADMIN_GET_DOCUMENTS_SENT,\n    payload\n  }\n}\n\nconst onGetDocumentsReceivedFromUser = payload => {\n  return {\n    type: ActionType.ADMIN_GET_DOCUMENTS_RECEIVED,\n    payload\n  }\n}\n\nconst onGetAllRequests = payload => {\n  return {\n    type: ActionType.ADMIN_GET_ALL_REQUESTS,\n    payload\n  }\n}\n\n// admin-client actions\nconst onAdminGetClients = payload => {\n  return {\n    type: ActionType.ADMIN_GET_CLIENTS,\n    payload\n  }\n}\n\nconst onUploadDoc = (payload) => {\n  return { \n    type: ActionType.ADMIN_UPLOAD_DOC,\n    payload\n  }\n}\n\nconst onGetAppoinments =(payload) => {\n  return {\n    type: ActionType.ADMIN_GET_APPOINTMENTS,\n    payload\n  }\n}\n\nconst onConfirmAppoinment = (payload) => {\n  return {\n    type: ActionType.ADMIN_CONFRIM_APPOINTMENT,\n    payload\n  }\n}\n\n// get clients under admin\nexport const adminGetClients = url => {\n  return getDataWithToken(url, onAdminGetClients);\n}\n// admin get clients appointments under admin\nexport const getAppointments = url => {\n  return getDataWithToken(url, onGetAppoinments);\n}\n// admin confirm client appointment \nexport const confirmAppointment = (url, payload) => {\n  return postDataWithToken(url, payload, onConfirmAppoinment);\n}\n\n// superadmin get all clients\nexport const getClient = url => {\n  return getDataWithToken(url, onGetClient);\n};\n\nexport const getClientDetails = url => {\n  return getDataWithToken(url, onGetClientDetails);\n};\n\nexport const updateClientSubscription = (url, payload) => {\n  return postDataWithToken(url, payload, onUpdateClientSubscription);\n}\n\nexport const getAllDocuments = (url) => {\n  return getDataWithToken(url, onGetAllDocuments)\n}\n\nexport const getDocumentsSentToUser = (url) => {\n  return getDataWithToken(url, onGetDocumentsSentToUser)\n}\n\nexport const getDocumentsReceivedFromUser = (url) => {\n  return getDataWithToken(url, onGetDocumentsReceivedFromUser)\n}\n\nexport const getAllRequests = (url) => {\n  return getDataWithToken(url, onGetAllRequests);\n}\n\nexport const uploadDoc = (url, payload) =>{\n  return postDataWithToken(url, payload, onUploadDoc)\n}\n","import Page from 'components/Page';\nimport React, { useEffect, \n  // useRef \n} from 'react';\nimport { Button } from 'reactstrap';\nimport PageSpinner from '../../components/PageSpinner';\nimport CustomTable from '../../components/table/CustomTable';\n\nimport {\n  getAllDocuments,\n} from '../../actions/admin/clients/Clients';\nimport {\n  adminGetDocuments,\n} from '../../apiConstants/apiConstants';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Documents = () => {\n  const dispatch = useDispatch();\n  const adminGetAllDocuments = useSelector(state => state.getAllDocuments);\n\n  useEffect(() => {\n    dispatch(getAllDocuments(adminGetDocuments));\n  }, []);\n\n  if (adminGetAllDocuments.isSuccessful) {\n    console.log('Check: ' + adminGetAllDocuments.documents);\n  }\n\n  const getRows = data => {\n    let rows = [];\n    data &&\n      data.reverse().map((document, i) => {\n        let sender;\n        let receiver;\n        if (document.sender) {\n          sender = document.sender.companyName\n        }\n        if (document.receiver) {\n          receiver = document.receiver.fullName\n        }\n        return rows.push({\n          id: i + 1,\n          client: sender || 'null',\n          admin: receiver || 'null',\n          docName: document.docName,\n          date: document.created_dt.slice(0, 10),\n          view: (\n            <Button\n              color=\"secondary\"\n              size=\"sm\"\n              className=\"p-1\"\n              style={{ fontSize: '.9rem', minWidth: '110px' }}\n              href={document.docContentUrl}\n              target=\"_blank\"\n            >\n              View\n            </Button>\n          )\n        });\n      });\n    return rows;\n  };\n\n  if (!adminGetAllDocuments.isSuccessful) {\n    return <PageSpinner />;\n  }\n  return (\n    <Page\n      title=\"Dropdowns\"\n      breadcrumbs={[{ name: 'Documents', active: true }]}\n    >\n      <div style={{\n        overflowX: 'auto'\n      }}>\n      <CustomTable\n        pagination\n        pagerows\n        columns={[\n          {\n            id: 'id',\n            align: 'center',\n            label: 'ID',\n            minWidth: 20,\n            color: value => 'blue',\n          },\n          {\n            id: 'client',\n            align: 'center',\n            label: 'User',\n            minWidth: 100,\n            color: value => 'blue',\n          },\n          {\n            id: 'admin',\n            align: 'center',\n            label: 'Admin',\n            minWidth: 100,\n            color: value => 'blue',\n          },\n          {\n            id:'docName',\n            align: 'center',\n            label: 'Document Name',\n            minWidth: 100,\n            color: value => 'blue',\n          },\n          {\n            id: 'date',\n            align: 'center',\n            label: 'Date Uploaded',\n            minWidth: 150,\n            color: value => 'blue',\n          },\n          {\n            id: 'view',\n            label: 'Action',\n            minWidth: 100,\n            align: 'center',\n            color: value => 'blue',\n          },\n        ]}\n        rows={getRows(adminGetAllDocuments.documents)}\n      /> \n      </div>    \n    </Page>\n  );\n}\nexport default Documents;\n"],"sourceRoot":""}