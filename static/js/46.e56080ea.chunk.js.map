{"version":3,"sources":["components/Page.js","utils/colors.js","pages/user/bookAppointment.js"],"names":["bem","bn","create","Page","_ref","breadcrumbs","Tag","tag","className","children","restProps","Object","C_Users_hp_Desktop_Job_ronzlsdesk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","title","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","CreateAppointment","primaryColor","secondaryColor","today","Date","_useState","useState","getFullYear","getMonth","getDate","_useState2","C_Users_hp_Desktop_Job_ronzlsdesk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","date","setDate","_useState3","_useState4","message","setMessage","dispatch","useDispatch","userBookAppointment","useSelector","state","lastWeek","useEffect","scrollTo","isInvalid","isSuccessful","alert","console","log","result","components_Page__WEBPACK_IMPORTED_MODULE_9__","id","onSubmit","preventDefault","payload","appointmentDate","appointmentMessage","bookAppointment","userBookAppointmentWithAdmin","react_infinite_calendar__WEBPACK_IMPORTED_MODULE_2__","selected","minDate","width","height","theme","accentColor","floatingNav","background","chevron","color","headerColor","selectionColor","textColor","default","todayColor","weekdayColor","onSelect","_components_InputField__WEBPACK_IMPORTED_MODULE_8__","required","type","placeholder","onChange","target","value","reactstrap__WEBPACK_IMPORTED_MODULE_6__","form","style","fontSize","disabled"],"mappings":"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","file":"static/js/46.e56080ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\n// import Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  // title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {/* {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )} */}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","// const availableColors = [\r\n//   'blue',\r\n//   'indigo',\r\n//   'purple',\r\n//   'pink',\r\n//   'red',\r\n//   'orange',\r\n//   'yellow',\r\n//   'green',\r\n//   'teal',\r\n//   'cyan',\r\n//   'white',\r\n//   'gray',\r\n//   'gray-dark',\r\n//   'primary',\r\n//   'secondary',\r\n//   'success',\r\n//   'info',\r\n//   'warning',\r\n//   'danger',\r\n//   'light',\r\n//   'dark',\r\n// ];\r\n\r\nexport const getColor = (availableColor = 'primary') => {\r\n  if (typeof window === 'undefined') {\r\n    return null;\r\n  }\r\n\r\n  const color = window\r\n    .getComputedStyle(document.documentElement)\r\n    .getPropertyValue(`--${availableColor}`);\r\n\r\n  return color;\r\n};\r\n\r\nexport const getThemeColors = () => [\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'info',\r\n  'warning',\r\n  'danger',\r\n];\r\n","import React, { useEffect, useState } from 'react';\r\nimport InfiniteCalendar from 'react-infinite-calendar';\r\nimport { getColor } from 'utils/colors';\r\nimport { Button, Form, FormGroup } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport InputField from '../../components/InputField';\r\nimport Page from 'components/Page';\r\nimport { bookAppointment } from '../../actions/user/Users';\r\nimport { userBookAppointmentWithAdmin } from '../../apiConstants/apiConstants';\r\n\r\nexport default function CreateAppointment() {\r\n  const primaryColor = getColor('primary');\r\n  const secondaryColor = getColor('secondary');\r\n  \r\n  const today = new Date();\r\n  const [date, setDate] = useState(`${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`);\r\n  const [message, setMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n  const userBookAppointment = useSelector(state => state.userBookAppointment);\r\n\r\n  const lastWeek = new Date(\r\n    today.getFullYear(),\r\n    today.getMonth(),\r\n    today.getDate() - 7,\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  const isInvalid = date === '' || message === '';\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      appointmentDate: date,\r\n      appointmentMessage: message\r\n    };\r\n    console.log(payload);\r\n    dispatch(bookAppointment(userBookAppointmentWithAdmin, payload));\r\n  }\r\n\r\n  if(userBookAppointment.isSuccessful) {\r\n    alert(`Successfully booked appointment with admin on ${date}`);\r\n    console.log(userBookAppointment.result);\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      className=\"DashboardPage\"\r\n      title=\"Dashboard\"\r\n      breadcrumbs={[{ name: 'Create Appointment', active: true }]} \r\n    >\r\n    <main className=\"appt-main\">\r\n      <Form className=\"appt-form\" id=\"appt-form\" onSubmit={handleSubmit}>\r\n        <div className=\"calender\">\r\n          <InfiniteCalendar\r\n            selected={today}\r\n            minDate={lastWeek}\r\n            width={'100%'}\r\n            height={300}\r\n            theme={{\r\n              accentColor: primaryColor,\r\n              floatingNav: {\r\n                background: secondaryColor,\r\n                chevron: primaryColor,\r\n                color: '#FFF',\r\n              },\r\n              headerColor: primaryColor,\r\n              selectionColor: secondaryColor,\r\n              textColor: {\r\n                active: '#FFF',\r\n                default: '#333',\r\n              },\r\n              todayColor: secondaryColor,\r\n              weekdayColor: primaryColor,\r\n            }}\r\n            onSelect={date => setDate(`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`)}\r\n          />\r\n        </div>\r\n        <FormGroup className=\"form-group\">\r\n          <InputField \r\n            required\r\n            type=\"text\"\r\n            name=\"message\"\r\n            placeholder=\"Appointment Message\"\r\n            className=\"inp mt-2\"\r\n            onChange={({ target }) => setMessage(target.value)}\r\n          />\r\n        </FormGroup>\r\n        <Button className=\"button mt-3\" form=\"appt-form\" type=\"submit\" style={{ fontSize: '1rem'}} disabled={isInvalid}>Book Appointment</Button>\r\n      </Form>\r\n    </main>\r\n    </Page>\r\n  )\r\n}"],"sourceRoot":""}