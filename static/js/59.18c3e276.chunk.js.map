{"version":3,"sources":["components/Page.js","actions/admin/clients/Clients.js","components/table/Search.js","components/table/CustomTable.js","pages/admin/adminClients.js"],"names":["bem","bn","create","Page","_ref","breadcrumbs","Tag","tag","className","children","restProps","Object","_home_joblyn_Desktop_asiwajudev_crm_2016698b9caf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","title","__webpack_require__","d","__webpack_exports__","adminGetClients","getClient","getClientDetails","updateClientSubscription","getAllDocuments","getDocumentsSentToUser","getDocumentsReceivedFromUser","getAllRequests","uploadDoc","_Types__WEBPACK_IMPORTED_MODULE_0__","_Services__WEBPACK_IMPORTED_MODULE_1__","onGetClient","payload","type","ActionType","onGetClientDetails","onUpdateClientSubscription","onGetAllDocuments","onGetDocumentsSentToUser","onGetDocumentsReceivedFromUser","onGetAllRequests","onAdminGetClients","onUploadDoc","url","getDataWithToken","postDataWithToken","Search","handleSearchChange","react_default","style","marginBottom","class","placeholder","onChange","icons_search","iconComponent","props","chevron_down","color","paddingRight","paddingLeft","useStyles","makeStyles","theme","root","width","small","spacing","height","container","maxHeight","paginationContainer","marginTop","rowPageContainer","StyledTableRow","withStyles","&:nth-of-type(odd)","backgroundColor","palette","action","hover","TableRow","BootstrapInput","label + &","input","borderRadius","position","border","fontSize","padding","transition","transitions","fontFamily","join","&:focus","InputBase","CustomTable","pagination","search","pagerows","rows","columns","actions","handleLinkClick","handleActionClick","id","refs","withEmoji","useRef","_React$useState","React","useState","_React$useState2","slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","items","setItems","_React$useState7","_React$useState8","count","setCount","_React$useState9","_React$useState10","filter","setFilter","console","log","event","target","value","getActionIconType","trash_2","edit","play_circle","pause_circle","paperclip","check_circle","x_circle","Grid","display","flexDirection","item","justify","alignItems","table_Search","toLowerCase","includes","Math","ceil","Paper","elevation","TableContainer","Table","TableHead","table_head","nColumn","nActions","nColumns","column","TableCell","align","minWidth","label","renderTableColumns","TableBody","ref","slice","row","role","tabIndex","cell","onClick","cursor","justifyContent","Avatar","src","i","IconButton","aria-label","component","paddingTop","paddingBottom","objectSpread","renderTableRows","Pagination","shape","showFirstButton","showLastButton","FormControl","Select","labelId","IconComponent","MenuItem","r","AdminClients","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","components_Page__WEBPACK_IMPORTED_MODULE_2__","_components_table_CustomTable__WEBPACK_IMPORTED_MODULE_3__","_apiConstants_apiConstants__WEBPACK_IMPORTED_MODULE_4__","_actions_admin_clients_Clients__WEBPACK_IMPORTED_MODULE_5__","_components_PageSpinner__WEBPACK_IMPORTED_MODULE_6__","dispatch","useDispatch","getClientsForAdmin","useSelector","state","useEffect","getClientsUnderAdmin","isSuccessful","clients","overflowX","data","client","push","getRows"],"mappings":"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","file":"static/js/59.18c3e276.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n// import Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  // title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {/* {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )} */}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    }),\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import * as ActionType from '../../Types';\nimport { getDataWithToken, postDataWithToken } from '../../Services';\n\n// superadmin-client actions\nconst onGetClient = payload => {\n  return {\n    type: ActionType.ADMIN_GET_CLIENT_SUCCESS,\n    payload: payload,\n  };\n};\n\nconst onGetClientDetails = payload => {\n  return {\n    type: ActionType.ADMIN_GET_CLIENT_DETAILS_SUCCESS,\n    payload: payload,\n  };\n};\n\nconst onUpdateClientSubscription = payload => {\n  return {\n    type: ActionType.ADMIN_UPDATE_CLIENT_SUBSRCIPTION,\n    payload\n  }\n}\n\nconst onGetAllDocuments = payload => {\n  return {\n    type: ActionType.ADMIN_GET_ALL_DOCUMENTS,\n    payload\n  }\n}\n\nconst onGetDocumentsSentToUser = payload => {\n  return {\n    type: ActionType.ADMIN_GET_DOCUMENTS_SENT,\n    payload\n  }\n}\n\nconst onGetDocumentsReceivedFromUser = payload => {\n  return {\n    type: ActionType.ADMIN_GET_DOCUMENTS_RECEIVED,\n    payload\n  }\n}\n\nconst onGetAllRequests = payload => {\n  return {\n    type: ActionType.ADMIN_GET_ALL_REQUESTS,\n    payload\n  }\n}\n\n// admin-client actions\nconst onAdminGetClients = payload => {\n  return {\n    type: ActionType.ADMIN_GET_CLIENTS,\n    payload\n  }\n}\n\nconst onUploadDoc = (payload) => {\n  return { \n    type: ActionType.ADMIN_UPLOAD_DOC,\n    payload\n  }\n}\n\n// const onLogin = payload => {\n//   return {\n//     type: ActionType.ADMIN_LOGIN_SUCCESS,\n//     payload,\n//   };\n// };\n\n// export const setCurrentAdminUser = decoded => {\n//   return {\n//     type: ActionType.SET_CURRENT_ADMIN_USER,\n//     payload: decoded,\n//   };\n// };\n\n// export const onForgotPassword = payload => {\n//   return {\n//     type: ActionType.ADMIN_FORGOT_PASSWORD_SUCCESS,\n//     payload,\n//   };\n// };\n\n// get clients under admin\nexport const adminGetClients = url => {\n  return getDataWithToken(url, onAdminGetClients);\n}\n\n\n// superadmin get all clients\nexport const getClient = url => {\n  return getDataWithToken(url, onGetClient);\n};\n\nexport const getClientDetails = url => {\n  return getDataWithToken(url, onGetClientDetails);\n};\n\nexport const updateClientSubscription = (url, payload) => {\n  return postDataWithToken(url, payload, onUpdateClientSubscription);\n}\n\nexport const getAllDocuments = (url) => {\n  return getDataWithToken(url, onGetAllDocuments)\n}\n\nexport const getDocumentsSentToUser = (url) => {\n  return getDataWithToken(url, onGetDocumentsSentToUser)\n}\n\nexport const getDocumentsReceivedFromUser = (url) => {\n  return getDataWithToken(url, onGetDocumentsReceivedFromUser)\n}\n\nexport const getAllRequests = (url) => {\n  return getDataWithToken(url, onGetAllRequests);\n}\n\nexport const uploadDoc = (url, payload) =>{\n  return postDataWithToken(url, payload, onUploadDoc)\n}\n// export const login = (url, payload) => {\n//   return postData(url, payload, onLogin);\n// };\n\n// export const forgotPassword = (url, payload) => {\n//   return postData(url, payload, onForgotPassword);\n// };\n","import React from \"react\";\nimport * as Icon from \"react-feather\";\n\nconst Search = ({ handleSearchChange }) => {\n  return (\n    <div className=\"search hidden sm:block\" style={{ marginBottom: 30 }}>\n      <input\n        type=\"text\"\n        class=\"search__input input placeholder-theme-13\"\n        placeholder=\"Search\"\n        onChange={handleSearchChange}\n      />\n      {/* <i data-feather=\"search\" className=\"search__icon\"></i> */}\n      <Icon.Search className=\"search__icon\" />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Pagination from '@material-ui/lab/Pagination';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport * as Icon from 'react-feather';\n\nimport Search from './Search';\nimport { Avatar } from '@material-ui/core';\n\nconst iconComponent = props => {\n  return (\n    <Icon.ChevronDown\n      className={props.className}\n      style={{ color: 'white', paddingRight: 5, paddingLeft: 5 }}\n    />\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  container: {\n    maxHeight: 900,\n    // maxWidth: 980,\n  },\n  paginationContainer: {\n    marginTop: 20,\n    height: 32,\n  },\n\n  rowPageContainer: {\n    height: '2px',\n  },\n}));\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n    height: '10px',\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n\n    backgroundColor: '#f50057', //theme.palette.background.paper,\n    color: '#fff',\n    border: '1px solid #ced4da',\n    fontSize: '0.875rem',\n    padding: '5px 26px 5px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['Poppins'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      //borderColor: '#80bdff',\n      // boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      backgroundColor: '#f50057', //theme.palette.background.paper,\n      color: '#fff',\n    },\n  },\n}))(InputBase);\n\nexport default function CustomTable({\n  pagination,\n  search,\n  pagerows,\n  rows,\n  columns,\n  actions,\n  handleLinkClick,\n  handleActionClick,\n  id,\n  withEmoji,\n}) {\n  const refs = useRef(0);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(1);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState(rows);\n  const [count, setCount] = React.useState(items.length / rowsPerPage);\n  const [filter, setFilter] = React.useState('Name');\n  console.log(filter);\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n  const handleChangeRowsPerPage = event => {\n    setPage(1);\n    setRowsPerPage(+event.target.value);\n  };\n  const handleSearchChange = event => {\n    let value = event.target.value.toLowerCase();\n    if (value) {\n      let search = rows.filter(item => item.name.toLowerCase().includes(value));\n\n      setItems(search);\n      // Need to correct our pagination to adapt to new search result\n      setPage(1);\n      setCount(Math.ceil(search.length / rowsPerPage));\n    } else {\n      // On search empty put everything back to initial stage\n      setItems(rows);\n      setPage(1);\n      setCount(Math.ceil(rows.length / rowsPerPage));\n    }\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  console.log(handleFilterChange);\n  const renderTableColumns = () => {\n    let nColumn = null;\n    let nActions = null;\n    let nEmoji = null;\n    console.log(nEmoji);\n\n    const nColumns = columns.map(column => {\n      nColumn = column;\n\n      return (\n        <TableCell\n          key={column.id + id}\n          align={column.align}\n          style={{ minWidth: column.minWidth }}\n        >\n          {column.label}\n        </TableCell>\n      );\n    });\n\n    if (actions) {\n      nActions = (\n        <TableCell\n          key={nColumn.id + id}\n          align={nColumn.align}\n          style={{ minWidth: nColumn.minWidth }}\n        >\n          Actions\n        </TableCell>\n      );\n    }\n    // if (withEmoji) {\n    //   nEmoji = (\n    //     <TableCell\n    //       key={nColumn.id + id}\n    //       align={nColumn.align}\n    //       style={{ minWidth: nColumn.minWidth }}\n    //     >\n    //       Preview\n    //     </TableCell>\n    //   );\n    // }\n    return (\n      <TableRow>\n        {nColumns}\n        {nActions}\n      </TableRow>\n    );\n  };\n  const renderTableRows = () => {\n    let nColumn = null;\n    return items\n      .slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\n      .map(row => {\n        return (\n          <StyledTableRow role=\"checkbox\" tabIndex={-1} key={row.id + 'Row'}>\n            {columns.map(column => {\n              nColumn = column;\n              const value = row[column.id];\n\n              return (\n                <TableCell\n                  key={column.id + 'Cell' + id}\n                  align={column.align}\n                  className={classes.cell}\n                  style={{\n                    color: column.color(value),\n                  }}\n                >\n                  {column.type && column.type === 'link' ? (\n                    <div\n                      color=\"inherit\"\n                      onClick={e => handleLinkClick(e, row)}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      {value}\n                    </div>\n                  ) : column.type && column.type === 'image' ? (\n                    <span\n                      style={{\n                        display: 'inline-flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <Avatar src={row.src && row.src} className=\"small\" />{' '}\n                      <span className=\"px-4\">{value}</span>\n                    </span>\n                  ) : (\n                    value\n                  )}\n                </TableCell>\n              );\n            })}\n            {actions ? (\n              <TableCell key={nColumn.id + 'Cell'} align={nColumn.align}>\n                {actions.map((action, i) => {\n                  return (\n                    <IconButton\n                      key={i + 'Action' + id}\n                      aria-label=\"upload picture\"\n                      component=\"span\"\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\n                      onClick={e =>\n                        handleActionClick(e, { type: action, ...row })\n                      }\n                    >\n                      {getActionIconType(action, i)}\n                    </IconButton>\n                  );\n                })}\n              </TableCell>\n            ) : (\n              ''\n            )}\n          </StyledTableRow>\n        );\n      });\n  };\n\n  const getActionIconType = (type, index) => {\n    switch (type) {\n      case 'delete':\n        return <Icon.Trash2 key={index} color=\"red\" />;\n      case 'edit':\n        return <Icon.Edit key={index} color=\"black\" />;\n      case 'play':\n        return <Icon.PlayCircle key={index} color=\"black\" />;\n      case 'pause':\n        return <Icon.PauseCircle key={index} color=\"black\" />;\n      case 'attachment':\n        return <Icon.Paperclip key={index} color=\"blue\" />;\n      case 'correct':\n        return <Icon.CheckCircle key={index} color=\"green\" />;\n      case 'close':\n        return <Icon.XCircle key={index} color=\"red\" />;\n      default: \n      return null\n    }\n  };\n  return (\n    <Grid container={true} className=\"w-full\" style={{display:'flex', flexDirection:'column'}}>\n      <Grid item>\n        <Grid container={true} justify=\"space-between\" alignItems=\"flex-start\">\n          <Grid item>\n            {search ? <Search handleSearchChange={handleSearchChange} /> : ''}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Paper elevation={1}>\n          <TableContainer className={classes.container}>\n            <Table>\n              <TableHead className={classes.table_head}>\n                {renderTableColumns()}\n              </TableHead>\n              <TableBody ref={refs}>{renderTableRows()}</TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Grid>\n      <Grid item>\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"flex-start\"\n          className={classes.paginationContainer}\n        >\n          <Grid item>\n            {pagination ? (\n              <Pagination\n                color=\"secondary\"\n                shape=\"rounded\"\n                count={count}\n                page={page}\n                showFirstButton\n                showLastButton\n                onChange={handleChange}\n              />\n            ) : (\n              ''\n            )}\n          </Grid>\n          <Grid item>\n            {pagerows ? (\n              <FormControl\n                className={classes.rowPageContainer}\n                style={{ padding: 15 }}\n              >\n                <Select\n                  labelId=\"customized-select-label\"\n                  id=\"customized-select\"\n                  value={rowsPerPage}\n                  IconComponent={iconComponent}\n                  onChange={handleChangeRowsPerPage}\n                  input={<BootstrapInput />}\n                >\n                  <MenuItem value={5}>5</MenuItem>\n                  <MenuItem value={10}>10</MenuItem>\n                  <MenuItem value={20}>20</MenuItem>\n                  <MenuItem value={30}>30</MenuItem>\n                </Select>\n              </FormControl>\n            ) : (\n              ''\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Page from 'components/Page';\nimport CustomTable from '../../components/table/CustomTable';\nimport { getClientsUnderAdmin } from '../../apiConstants/apiConstants';\nimport { adminGetClients } from '../../actions/admin/clients/Clients';\nimport PageSpinner from '../../components/PageSpinner';\n\nexport default function AdminClients() {\n  const dispatch = useDispatch();\n  const getClientsForAdmin = useSelector(state => state.getClientsForAdmin);\n\n  useEffect(() => {\n    dispatch(adminGetClients(getClientsUnderAdmin))\n  }, []);\n\n  if(getClientsForAdmin.isSuccessful) {\n    console.log(getClientsForAdmin.clients);\n  }\n\n  const getRows = data => {\n    let rows = [];\n    data && \n      data.map((client, i) => (\n        rows.push({\n          id: i + 1,\n        })\n      ));\n\n      return rows;\n  }\n\n  if(!getClientsForAdmin.isSuccessful) {\n    return <PageSpinner />\n  } \n  return (\n    <Page\n      title=\"Dropdowns\"\n      breadcrumbs={[{ name: 'Clients', active: true }]}\n    >\n    {!getClientsForAdmin.clients.length ? \n    <div\n      style={{\n        overflowX: 'auto'\n      }}\n    >\n      <CustomTable\n          pagination\n          pagerows\n          columns={[\n            {\n              id: 'id',\n              label: 'ID',\n              minWidth: 20,\n              color: value => 'blue',\n            },\n\n            {\n              id: 'user',\n              label: 'User',\n              minWidth: 100,\n              color: value => 'blue',\n            },\n            {\n              id: 'accountType',\n              label: 'Account Type',\n              minWidth: 50,\n              color: value => 'blue',\n            },\n            {\n              id: 'companyAddress',\n              label: 'Address',\n              minWidth: 150,\n              align: 'center',\n              color: value => 'blue',\n            },\n            {\n              id: 'phoneNumber',\n              label: 'Phone Number',\n              minWidth: 50,\n              align: 'center',\n              color: value => 'blue',\n            },\n            {\n              id: 'email',\n              label: 'Email',\n              minWidth: 100,\n              align: 'center',\n              color: value => 'blue',\n            },\n            {\n              id: 'website',\n              label: 'Website',\n              minWidth: 80,\n              align: 'center',\n              color: value => 'blue',\n            },\n            {\n              id: 'view',\n              label: 'Actions',\n              minWidth: 150,\n              align: 'center',\n              color: value => 'blue',\n              type: 'link',\n            },\n          ]}\n          rows={getRows(getClientsForAdmin.clients)}\n          // handleActionClick={onActionClicked}\n          // handleLinkClick={onLinkClicked}\n        /> \n      </div> \n      : <div className=\"empty-table\">\n        <p><em>No clients have been assigned to you</em></p>\n      </div>\n    }\n    </Page>\n  )\n}"],"sourceRoot":""}