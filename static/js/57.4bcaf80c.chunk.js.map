{"version":3,"sources":["components/Page.js","components/table/Search.js","components/table/CustomTable.js","actions/admin/clients/Clients.js","components/Modal.js","pages/super/requests.js"],"names":["bem","bn","create","Page","_ref","breadcrumbs","Tag","tag","className","children","restProps","Object","C_Users_hp_Desktop_Job_ronzlsdesk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","title","Search","handleSearchChange","react_default","style","marginBottom","type","class","placeholder","onChange","icons_search","iconComponent","props","chevron_down","color","paddingRight","paddingLeft","useStyles","makeStyles","theme","root","width","small","spacing","height","container","maxHeight","paginationContainer","marginTop","rowPageContainer","StyledTableRow","withStyles","&:nth-of-type(odd)","backgroundColor","palette","action","hover","TableRow","BootstrapInput","label + &","input","borderRadius","position","border","fontSize","padding","transition","transitions","fontFamily","join","&:focus","InputBase","CustomTable","pagination","search","pagerows","rows","columns","actions","handleLinkClick","handleActionClick","id","refs","withEmoji","useRef","_React$useState","React","useState","_React$useState2","slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","items","setItems","_React$useState7","_React$useState8","count","setCount","_React$useState9","_React$useState10","filter","setFilter","console","log","event","target","value","getActionIconType","trash_2","edit","play_circle","pause_circle","paperclip","check_circle","x_circle","Grid","conatiner","item","justify","alignItems","table_Search","toLowerCase","includes","Math","ceil","Paper","elevation","TableContainer","Table","TableHead","table_head","nColumn","nActions","nColumns","column","TableCell","align","minWidth","label","renderTableColumns","TableBody","ref","slice","row","role","tabIndex","cell","onClick","cursor","display","justifyContent","Avatar","src","i","IconButton","aria-label","component","paddingTop","paddingBottom","objectSpread","renderTableRows","Pagination","shape","showFirstButton","showLastButton","FormControl","Select","labelId","IconComponent","MenuItem","__webpack_require__","d","__webpack_exports__","getClient","getClientDetails","updateClientSubscription","getAllDocuments","getAllRequests","_Types__WEBPACK_IMPORTED_MODULE_0__","_Services__WEBPACK_IMPORTED_MODULE_1__","onGetClient","payload","ActionType","onGetClientDetails","onUpdateClientSubscription","onGetAllDocuments","onGetAllRequests","url","getDataWithToken","postDataWithToken","Modal","C_Users_hp_Desktop_Job_ronzlsdesk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","showModal","setShowModal","Fragment","r","Requests","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_PageSpinner__WEBPACK_IMPORTED_MODULE_4__","_components_table_CustomTable__WEBPACK_IMPORTED_MODULE_5__","_actions_admin_clients_Clients__WEBPACK_IMPORTED_MODULE_6__","_apiConstants_apiConstants__WEBPACK_IMPORTED_MODULE_7__","_components_Modal__WEBPACK_IMPORTED_MODULE_8__","dispatch","useDispatch","adminGetAllDocuments","useSelector","state","useEffect","adminGetRequests","documents","data","user","push","companyName","accountType","companyAddress","phoneNumber","email","website","websiteUrl","view","_id","to","concat","getRows","alert","JSON","stringify"],"mappings":"yJASMA,EAAMC,IAAGC,OAAO,QAEhBC,EAAO,SAAAC,GAOP,IALJC,EAKID,EALJC,YACKC,EAIDF,EAJJG,IACAC,EAGIJ,EAHJI,UACAC,EAEIL,EAFJK,SACGC,EACCC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,8CACES,EAAUb,EAAIc,EAAE,OAAQN,GAE9B,OACEO,EAAAC,EAAAC,cAACX,EAADK,OAAAO,OAAA,CAAKV,UAAWK,GAAaH,GAC3BK,EAAAC,EAAAC,cAAA,OAAKT,UAAWR,EAAImB,EAAE,WAQnBd,GACCU,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYZ,UAAWR,EAAImB,EAAE,eAC3BJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,aACChB,EAAYiB,QACXjB,EAAYkB,IAAI,SAAAC,EAAmBC,GAAnB,IAAGC,EAAHF,EAAGE,KAAMC,EAATH,EAASG,OAAT,OACdZ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAgBO,IAAKH,EAAOE,OAAQA,GACjCD,OAMZjB,IAkBPN,EAAK0B,aAAe,CAClBtB,IAAK,MACLuB,MAAO,IAGM3B,4SChDA4B,EAfA,SAAA3B,GAA4B,IAAzB4B,EAAyB5B,EAAzB4B,mBAChB,OACEC,EAAAjB,EAAAC,cAAA,OAAKT,UAAU,yBAAyB0B,MAAO,CAAEC,aAAc,KAC7DF,EAAAjB,EAAAC,cAAA,SACEmB,KAAK,OACLC,MAAM,2CACNC,YAAY,SACZC,SAAUP,IAGZC,EAAAjB,EAAAC,cAACuB,EAAA,EAAD,CAAahC,UAAU,4DCQ7B,IAAMiC,EAAgB,SAAAC,GACpB,OACET,EAAAjB,EAAAC,cAAC0B,EAAA,EAAD,CACEnC,UAAWkC,EAAMlC,UACjB0B,MAAO,CAAEU,MAAO,QAASC,aAAc,EAAGC,YAAa,MAKvDC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAOF,EAAMI,QAAQ,GACrBC,OAAQL,EAAMI,QAAQ,IAExBE,UAAW,CACTC,UAAW,KAGbC,oBAAqB,CACnBC,UAAW,GACXJ,OAAQ,IAGVK,iBAAkB,CAChBL,OAAQ,UAGNM,EAAiBC,YAAW,SAAAZ,GAAK,MAAK,CAC1CC,KAAM,CACJY,qBAAsB,CACpBC,gBAAiBd,EAAMe,QAAQC,OAAOC,UAHrBL,CAMnBM,KACEC,EAAiBP,YAAW,SAAAZ,GAAK,MAAK,CAC1CC,KAAM,CACJmB,YAAa,CACXX,UAAWT,EAAMI,QAAQ,IAE3BC,OAAQ,QAEVgB,MAAO,CACLC,aAAc,EACdC,SAAU,WAEVT,gBAAiB,UACjBnB,MAAO,OACP6B,OAAQ,oBACRC,SAAU,WACVC,QAAS,oBACTC,WAAY3B,EAAM4B,YAAY3E,OAAO,CAAC,eAAgB,eAEtD4E,WAAY,CAAC,WAAWC,KAAK,KAC7BC,UAAW,CACTT,aAAc,EAGdR,gBAAiB,UACjBnB,MAAO,WAxBUiB,CA2BnBoB,KAEW,SAASC,EAAT9E,GAWZ,IAVD+E,EAUC/E,EAVD+E,WACAC,EASChF,EATDgF,OACAC,EAQCjF,EARDiF,SACAC,EAOClF,EAPDkF,KACAC,EAMCnF,EANDmF,QACAC,EAKCpF,EALDoF,QACAC,EAICrF,EAJDqF,gBACAC,EAGCtF,EAHDsF,kBACAC,EAECvF,EAFDuF,GAGMC,GADLxF,EADDyF,UAEaC,iBAAO,IACdjF,EAAUkC,IAFfgD,EAGuBC,IAAMC,SAAS,GAHtCC,EAAAvF,OAAAwF,EAAA,EAAAxF,CAAAoF,EAAA,GAGMK,EAHNF,EAAA,GAGYG,EAHZH,EAAA,GAAAI,EAIqCN,IAAMC,SAAS,GAJpDM,EAAA5F,OAAAwF,EAAA,EAAAxF,CAAA2F,EAAA,GAIME,EAJND,EAAA,GAImBE,EAJnBF,EAAA,GAAAG,EAKyBV,IAAMC,SAASX,GALxCqB,EAAAhG,OAAAwF,EAAA,EAAAxF,CAAA+F,EAAA,GAKME,EALND,EAAA,GAKaE,EALbF,EAAA,GAAAG,GAMyBd,IAAMC,SAASW,EAAMtF,OAASkF,GANvDO,GAAApG,OAAAwF,EAAA,EAAAxF,CAAAmG,GAAA,GAMME,GANND,GAAA,GAMaE,GANbF,GAAA,GAAAG,GAO2BlB,IAAMC,SAAS,QAP1CkB,GAAAxG,OAAAwF,EAAA,EAAAxF,CAAAuG,GAAA,GAOME,GAPND,GAAA,GAOcE,GAPdF,GAAA,GAQDG,QAAQC,IAAIH,IA2BZE,QAAQC,IAHmB,SAAAC,GACzBH,GAAUG,EAAMC,OAAOC,SAGzB,IAwHMC,GAAoB,SAACvF,EAAMX,GAC/B,OAAQW,GACN,IAAK,SACH,OAAOH,EAAAjB,EAAAC,cAAC2G,EAAA,EAAD,CAAahG,IAAKH,EAAOmB,MAAM,QACxC,IAAK,OACH,OAAOX,EAAAjB,EAAAC,cAAC4G,EAAA,EAAD,CAAWjG,IAAKH,EAAOmB,MAAM,UACtC,IAAK,OACH,OAAOX,EAAAjB,EAAAC,cAAC6G,EAAA,EAAD,CAAiBlG,IAAKH,EAAOmB,MAAM,UAC5C,IAAK,QACH,OAAOX,EAAAjB,EAAAC,cAAC8G,EAAA,EAAD,CAAkBnG,IAAKH,EAAOmB,MAAM,UAC7C,IAAK,aACH,OAAOX,EAAAjB,EAAAC,cAAC+G,EAAA,EAAD,CAAgBpG,IAAKH,EAAOmB,MAAM,SAC3C,IAAK,UACH,OAAOX,EAAAjB,EAAAC,cAACgH,EAAA,EAAD,CAAkBrG,IAAKH,EAAOmB,MAAM,UAC7C,IAAK,QACH,OAAOX,EAAAjB,EAAAC,cAACiH,EAAA,EAAD,CAActG,IAAKH,EAAOmB,MAAM,QACzC,QACA,OAAO,OAGX,OACEX,EAAAjB,EAAAC,cAACkH,EAAA,EAAD,CAAMC,WAAW,EAAM5H,UAAU,UAC/ByB,EAAAjB,EAAAC,cAACkH,EAAA,EAAD,CAAME,MAAI,GACRpG,EAAAjB,EAAAC,cAACkH,EAAA,EAAD,CAAM5E,WAAW,EAAM+E,QAAQ,gBAAgBC,WAAW,cACxDtG,EAAAjB,EAAAC,cAACkH,EAAA,EAAD,CAAME,MAAI,GACPjD,EAASnD,EAAAjB,EAAAC,cAACuH,EAAD,CAAQxG,mBArKD,SAAAwF,GACzB,IAAIE,EAAQF,EAAMC,OAAOC,MAAMe,cAC/B,GAAIf,EAAO,CACT,IAAItC,EAASE,EAAK8B,OAAO,SAAAiB,GAAI,OAAIA,EAAK3G,KAAK+G,cAAcC,SAAShB,KAElEb,EAASzB,GAETiB,EAAQ,GACRY,GAAS0B,KAAKC,KAAKxD,EAAO9D,OAASkF,SAGnCK,EAASvB,GACTe,EAAQ,GACRY,GAAS0B,KAAKC,KAAKtD,EAAKhE,OAASkF,OAwJoC,MAIrEvE,EAAAjB,EAAAC,cAACkH,EAAA,EAAD,CAAME,MAAI,GACRpG,EAAAjB,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,UAAW,GAChB7G,EAAAjB,EAAAC,cAAC8H,EAAA,EAAD,CAAgBvI,UAAWK,EAAQ0C,WACjCtB,EAAAjB,EAAAC,cAAC+H,EAAA,EAAD,KACE/G,EAAAjB,EAAAC,cAACgI,EAAA,EAAD,CAAWzI,UAAWK,EAAQqI,YAzJf,WACzB,IAAIC,EAAU,KACVC,EAAW,KAEf9B,QAAQC,IADK,MAGb,IAAM8B,EAAW9D,EAAQhE,IAAI,SAAA+H,GAG3B,OAFAH,EAAUG,EAGRrH,EAAAjB,EAAAC,cAACsI,EAAA,EAAD,CACE3H,IAAK0H,EAAO3D,GAAKA,EACjB6D,MAAOF,EAAOE,MACdtH,MAAO,CAAEuH,SAAUH,EAAOG,WAEzBH,EAAOI,SA2Bd,OAtBIlE,IACF4D,EACEnH,EAAAjB,EAAAC,cAACsI,EAAA,EAAD,CACE3H,IAAKuH,EAAQxD,GAAKA,EAClB6D,MAAOL,EAAQK,MACftH,MAAO,CAAEuH,SAAUN,EAAQM,WAH7B,YAqBFxH,EAAAjB,EAAAC,cAACkD,EAAA,EAAD,KACGkF,EACAD,GA6GQO,IAEH1H,EAAAjB,EAAAC,cAAC2I,EAAA,EAAD,CAAWC,IAAKjE,GA3GJ,WACtB,IAAIuD,EAAU,KACd,OAAOvC,EACJkD,OAAO1D,EAAO,GAAKI,GAAcJ,EAAO,GAAKI,EAAcA,GAC3DjF,IAAI,SAAAwI,GACH,OACE9H,EAAAjB,EAAAC,cAAC2C,EAAD,CAAgBoG,KAAK,WAAWC,UAAW,EAAGrI,IAAKmI,EAAIpE,GAAK,OACzDJ,EAAQhE,IAAI,SAAA+H,GACXH,EAAUG,EACV,IAAM5B,EAAQqC,EAAIT,EAAO3D,IAEzB,OACE1D,EAAAjB,EAAAC,cAACsI,EAAA,EAAD,CACE3H,IAAK0H,EAAO3D,GAAK,OAASA,EAC1B6D,MAAOF,EAAOE,MACdhJ,UAAWK,EAAQqJ,KACnBhI,MAAO,CACLU,MAAO0G,EAAO1G,MAAM8E,KAGrB4B,EAAOlH,MAAwB,SAAhBkH,EAAOlH,KACrBH,EAAAjB,EAAAC,cAAA,OACE2B,MAAM,UACNuH,QAAS,SAAAhJ,GAAC,OAAIsE,EAAgBtE,EAAG4I,IACjC7H,MAAO,CAAEkI,OAAQ,YAEhB1C,GAED4B,EAAOlH,MAAwB,UAAhBkH,EAAOlH,KACxBH,EAAAjB,EAAAC,cAAA,QACEiB,MAAO,CACLmI,QAAS,cACTC,eAAgB,gBAChB/B,WAAY,WAGdtG,EAAAjB,EAAAC,cAACsJ,EAAA,EAAD,CAAQC,IAAKT,EAAIS,KAAOT,EAAIS,IAAKhK,UAAU,UAAW,IACtDyB,EAAAjB,EAAAC,cAAA,QAAMT,UAAU,QAAQkH,IAG1BA,KAKPlC,EACCvD,EAAAjB,EAAAC,cAACsI,EAAA,EAAD,CAAW3H,IAAKuH,EAAQxD,GAAK,OAAQ6D,MAAOL,EAAQK,OACjDhE,EAAQjE,IAAI,SAAC0C,EAAQwG,GACpB,OACExI,EAAAjB,EAAAC,cAACyJ,EAAA,EAAD,CACE9I,IAAK6I,EAAI,SAAW9E,EACpBgF,aAAW,iBACXC,UAAU,OACV1I,MAAO,CAAE2I,WAAY,EAAGC,cAAe,GACvCX,QAAS,SAAAhJ,GAAC,OACRuE,EAAkBvE,EAADR,OAAAoK,EAAA,EAAApK,CAAA,CAAMyB,KAAM6B,GAAW8F,MAGzCpC,GAAkB1D,EAAQwG,OAMnC,MA2CuBO,QAK/B/I,EAAAjB,EAAAC,cAACkH,EAAA,EAAD,CAAME,MAAI,GACRpG,EAAAjB,EAAAC,cAACkH,EAAA,EAAD,CACE5E,WAAS,EACT+E,QAAQ,gBACRC,WAAW,aACX/H,UAAWK,EAAQ4C,qBAEnBxB,EAAAjB,EAAAC,cAACkH,EAAA,EAAD,CAAME,MAAI,GACPlD,EACClD,EAAAjB,EAAAC,cAACgK,EAAA,EAAD,CACErI,MAAM,YACNsI,MAAM,UACNlE,MAAOA,GACPZ,KAAMA,EACN+E,iBAAe,EACfC,gBAAc,EACd7I,SA5MO,SAACiF,EAAOE,GAC3BrB,EAAQqB,MA8ME,IAGJzF,EAAAjB,EAAAC,cAACkH,EAAA,EAAD,CAAME,MAAI,GACPhD,EACCpD,EAAAjB,EAAAC,cAACoK,EAAA,EAAD,CACE7K,UAAWK,EAAQ8C,iBACnBzB,MAAO,CAAEyC,QAAS,KAElB1C,EAAAjB,EAAAC,cAACqK,EAAA,EAAD,CACEC,QAAQ,0BACR5F,GAAG,oBACH+B,MAAOlB,EACPgF,cAAe/I,EACfF,SA1NgB,SAAAiF,GAC9BnB,EAAQ,GACRI,GAAgBe,EAAMC,OAAOC,QAyNfpD,MAAOrC,EAAAjB,EAAAC,cAACmD,EAAD,OAEPnC,EAAAjB,EAAAC,cAACwK,EAAA,EAAD,CAAU/D,MAAO,GAAjB,KACAzF,EAAAjB,EAAAC,cAACwK,EAAA,EAAD,CAAU/D,MAAO,IAAjB,MACAzF,EAAAjB,EAAAC,cAACwK,EAAA,EAAD,CAAU/D,MAAO,IAAjB,MACAzF,EAAAjB,EAAAC,cAACwK,EAAA,EAAD,CAAU/D,MAAO,IAAjB,QAIJ,0CClVdgE,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAA,IAAAC,EAAAR,EAAA,GAAAS,EAAAT,EAAA,IAGMU,EAAc,SAAAC,GAClB,MAAO,CACLjK,KAAMkK,IACND,QAASA,IAIPE,EAAqB,SAAAF,GACzB,MAAO,CACLjK,KAAMkK,IACND,QAASA,IAIPG,EAA6B,SAAAH,GACjC,MAAO,CACLjK,KAAMkK,IACND,YAIEI,EAAoB,SAAAJ,GACxB,MAAO,CACLjK,KAAMkK,IACND,YAIEK,EAAmB,SAAAL,GACvB,MAAO,CACLjK,KAAMkK,IACND,YAwBSR,EAAY,SAAAc,GACvB,OAAOC,YAAiBD,EAAKP,IAGlBN,EAAmB,SAAAa,GAC9B,OAAOC,YAAiBD,EAAKJ,IAGlBR,EAA2B,SAACY,EAAKN,GAC5C,OAAOQ,YAAkBF,EAAKN,EAASG,IAG5BR,EAAkB,SAACW,GAC9B,OAAOC,YAAiBD,EAAKF,IAGlBR,EAAiB,SAACU,GAC7B,OAAOC,YAAiBD,EAAKD,kGCzEhB,SAASI,EAAT1M,GAA2B,IAAV6D,EAAU7D,EAAV6D,OAAU8B,EACNC,IAAMC,UAAS,GADTC,EAAAvF,OAAAoM,EAAA,EAAApM,CAAAoF,EAAA,GACjCiH,EADiC9G,EAAA,GACtB+G,EADsB/G,EAAA,GAExC,OACEnF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkM,SAAA,KACEnM,EAAAC,EAAAC,cAAA,UACET,UAAU,8EACV4B,KAAK,SACLF,MAAO,CAAE0C,WAAY,iBACrBuF,QAAS,kBAAM8C,GAAa,KAE3BhJ,GAEF+I,EACCjM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkM,SAAA,KACEnM,EAAAC,EAAAC,cAAA,OACET,UAAU,wHACV2J,QAAS,kBAAM8C,GAAa,KAE5BlM,EAAAC,EAAAC,cAAA,OAAKT,UAAU,0CAEbO,EAAAC,EAAAC,cAAA,OAAKT,UAAU,wGAEbO,EAAAC,EAAAC,cAAA,OAAKT,UAAU,uFACbO,EAAAC,EAAAC,cAAA,MAAIT,UAAU,0BAAd,0BAaFO,EAAAC,EAAAC,cAAA,OAAKT,UAAU,0BACbO,EAAAC,EAAAC,cAAA,KAAGT,UAAU,8CAAb,+SASFO,EAAAC,EAAAC,cAAA,OAAKT,UAAU,qFACbO,EAAAC,EAAAC,cAAA,UACET,UAAU,sHACV4B,KAAK,SACLF,MAAO,CAAE0C,WAAY,iBACrBuF,QAAS,kBAAM8C,GAAa,KAJ9B,SAQAlM,EAAAC,EAAAC,cAAA,UACET,UAAU,6JACV4B,KAAK,SACLF,MAAO,CAAE0C,WAAY,iBACrBuF,QAAS,kBAAM8C,GAAa,KAJ9B,oBAYRlM,EAAAC,EAAAC,cAAA,OAAKT,UAAU,4CAEf,yCCvEVkL,EAAAyB,EAAAvB,GAAAF,EAAAC,EAAAC,EAAA,4BAAAwB,IAAA,IAAAC,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA6B,EAAAF,GAAAG,EAAA9B,EAAA,GAAA+B,EAAA/B,EAAA,IAAAgC,EAAAhC,EAAA,KAAAiC,EAAAjC,EAAA,IAAAkC,EAAAlC,EAAA,KAAAmC,EAAAnC,EAAA,KAAAoC,EAAApC,EAAA,IAAAqC,EAAArC,EAAA,KAae,SAAS0B,IACtB,IAAMY,EAAWC,cACXC,EAAuBC,YAAY,SAAAC,GAAK,OAAIA,EAAMnC,iBAOxDoC,oBAAU,WACRL,EAAS/B,YAAeqC,OACvB,IAiCH,OAAuC,IAAnCJ,EAAqBK,UAChBjB,EAAAtM,EAAAC,cAAC0M,EAAA,EAAD,MAGPL,EAAAtM,EAAAC,cAACyM,EAAA,EAAD,CACE5L,MAAM,YACNzB,YAAa,CAAC,CAAEqB,KAAM,cAAeC,QAAQ,KAE7C2L,EAAAtM,EAAAC,cAAC8M,EAAA,EAAD,CAAO9J,OAAO,SACdqJ,EAAAtM,EAAAC,cAAC2M,EAAA,EAAD,CACEzI,YAAU,EACVE,UAAQ,EACRE,QAAS,CACP,CACEI,GAAI,KACJ+D,MAAO,KACPD,SAAU,GACV7G,MAAO,SAAA8E,GAAK,MAAI,SAElB,CACE/B,GAAI,OACJ+D,MAAO,OACPD,SAAU,IACV7G,MAAO,SAAA8E,GAAK,MAAI,SAElB,CACE/B,GAAI,eACJ+D,MAAO,gBACPD,SAAU,IACV7G,MAAO,SAAA8E,GAAK,MAAI,SAElB,CACE/B,GAAI,qBACJ+D,MAAO,sBACPD,SAAU,IACV7G,MAAO,SAAA8E,GAAK,MAAI,SAElB,CACE/B,GAAI,OACJ+D,MAAO,eACPD,SAAU,IACV7G,MAAO,SAAA8E,GAAK,MAAI,WAGpBpC,KA3EU,SAAAkJ,GACd,IAAIlJ,EAAO,GAyBX,OAvBAkJ,GACEA,EAAKjN,IAAI,SAACkN,EAAMhN,GAoBd,OAnBA6D,EAAKoJ,KAAK,CACR/I,GAAIlE,EAAQ,EACZgN,KAAMA,EAAKE,YACXC,YAAaH,EAAKG,YAClBC,eAAgBJ,EAAKI,eACrBC,YAAaL,EAAKK,YAClBC,MAAON,EAAKM,MACZC,QAASP,EAAKQ,WACdC,KACE5B,EAAAtM,EAAAC,cAACuM,EAAA,EAAD,CAEErD,QAAS,WAAmBsE,EAAKU,KACjCC,GAAE,qCAAAC,OAAuCZ,EAAKU,KAC9C3O,UAAU,kDAJZ,mBAUG,OAEJ8E,EAiDGgK,CAAQpB,EAAqBK,WACnC7I,kBAhDkB,SAACvE,EAAGkL,GAC1BkD,MAAMC,KAAKC,UAAUpD,KAgDjB5G,gBApFgB,SAACtE,EAAGkL","file":"static/js/57.4bcaf80c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\n// import Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  // title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {/* {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )} */}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport * as Icon from \"react-feather\";\r\n\r\nconst Search = ({ handleSearchChange }) => {\r\n  return (\r\n    <div className=\"search hidden sm:block\" style={{ marginBottom: 30 }}>\r\n      <input\r\n        type=\"text\"\r\n        class=\"search__input input placeholder-theme-13\"\r\n        placeholder=\"Search\"\r\n        onChange={handleSearchChange}\r\n      />\r\n      {/* <i data-feather=\"search\" className=\"search__icon\"></i> */}\r\n      <Icon.Search className=\"search__icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Icon from 'react-feather';\r\n\r\nimport Search from './Search';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nconst iconComponent = props => {\r\n  return (\r\n    <Icon.ChevronDown\r\n      className={props.className}\r\n      style={{ color: 'white', paddingRight: 5, paddingLeft: 5 }}\r\n    />\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  container: {\r\n    maxHeight: 900,\r\n    // maxWidth: 980,\r\n  },\r\n  paginationContainer: {\r\n    marginTop: 20,\r\n    height: 32,\r\n  },\r\n\r\n  rowPageContainer: {\r\n    height: '2px',\r\n  },\r\n}));\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    height: '10px',\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n\r\n    backgroundColor: '#f50057', //theme.palette.background.paper,\r\n    color: '#fff',\r\n    border: '1px solid #ced4da',\r\n    fontSize: '0.875rem',\r\n    padding: '5px 26px 5px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: ['Poppins'].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      //borderColor: '#80bdff',\r\n      // boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n      backgroundColor: '#f50057', //theme.palette.background.paper,\r\n      color: '#fff',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function CustomTable({\r\n  pagination,\r\n  search,\r\n  pagerows,\r\n  rows,\r\n  columns,\r\n  actions,\r\n  handleLinkClick,\r\n  handleActionClick,\r\n  id,\r\n  withEmoji,\r\n}) {\r\n  const refs = useRef(0);\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [items, setItems] = React.useState(rows);\r\n  const [count, setCount] = React.useState(items.length / rowsPerPage);\r\n  const [filter, setFilter] = React.useState('Name');\r\n  console.log(filter);\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setPage(1);\r\n    setRowsPerPage(+event.target.value);\r\n  };\r\n  const handleSearchChange = event => {\r\n    let value = event.target.value.toLowerCase();\r\n    if (value) {\r\n      let search = rows.filter(item => item.name.toLowerCase().includes(value));\r\n\r\n      setItems(search);\r\n      // Need to correct our pagination to adapt to new search result\r\n      setPage(1);\r\n      setCount(Math.ceil(search.length / rowsPerPage));\r\n    } else {\r\n      // On search empty put everything back to initial stage\r\n      setItems(rows);\r\n      setPage(1);\r\n      setCount(Math.ceil(rows.length / rowsPerPage));\r\n    }\r\n  };\r\n  const handleFilterChange = event => {\r\n    setFilter(event.target.value);\r\n  };\r\n  console.log(handleFilterChange);\r\n  const renderTableColumns = () => {\r\n    let nColumn = null;\r\n    let nActions = null;\r\n    let nEmoji = null;\r\n    console.log(nEmoji);\r\n\r\n    const nColumns = columns.map(column => {\r\n      nColumn = column;\r\n\r\n      return (\r\n        <TableCell\r\n          key={column.id + id}\r\n          align={column.align}\r\n          style={{ minWidth: column.minWidth }}\r\n        >\r\n          {column.label}\r\n        </TableCell>\r\n      );\r\n    });\r\n\r\n    if (actions) {\r\n      nActions = (\r\n        <TableCell\r\n          key={nColumn.id + id}\r\n          align={nColumn.align}\r\n          style={{ minWidth: nColumn.minWidth }}\r\n        >\r\n          Actions\r\n        </TableCell>\r\n      );\r\n    }\r\n    // if (withEmoji) {\r\n    //   nEmoji = (\r\n    //     <TableCell\r\n    //       key={nColumn.id + id}\r\n    //       align={nColumn.align}\r\n    //       style={{ minWidth: nColumn.minWidth }}\r\n    //     >\r\n    //       Preview\r\n    //     </TableCell>\r\n    //   );\r\n    // }\r\n    return (\r\n      <TableRow>\r\n        {nColumns}\r\n        {nActions}\r\n      </TableRow>\r\n    );\r\n  };\r\n  const renderTableRows = () => {\r\n    let nColumn = null;\r\n    return items\r\n      .slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\r\n      .map(row => {\r\n        return (\r\n          <StyledTableRow role=\"checkbox\" tabIndex={-1} key={row.id + 'Row'}>\r\n            {columns.map(column => {\r\n              nColumn = column;\r\n              const value = row[column.id];\r\n\r\n              return (\r\n                <TableCell\r\n                  key={column.id + 'Cell' + id}\r\n                  align={column.align}\r\n                  className={classes.cell}\r\n                  style={{\r\n                    color: column.color(value),\r\n                  }}\r\n                >\r\n                  {column.type && column.type === 'link' ? (\r\n                    <div\r\n                      color=\"inherit\"\r\n                      onClick={e => handleLinkClick(e, row)}\r\n                      style={{ cursor: 'pointer' }}\r\n                    >\r\n                      {value}\r\n                    </div>\r\n                  ) : column.type && column.type === 'image' ? (\r\n                    <span\r\n                      style={{\r\n                        display: 'inline-flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <Avatar src={row.src && row.src} className=\"small\" />{' '}\r\n                      <span className=\"px-4\">{value}</span>\r\n                    </span>\r\n                  ) : (\r\n                    value\r\n                  )}\r\n                </TableCell>\r\n              );\r\n            })}\r\n            {actions ? (\r\n              <TableCell key={nColumn.id + 'Cell'} align={nColumn.align}>\r\n                {actions.map((action, i) => {\r\n                  return (\r\n                    <IconButton\r\n                      key={i + 'Action' + id}\r\n                      aria-label=\"upload picture\"\r\n                      component=\"span\"\r\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                      onClick={e =>\r\n                        handleActionClick(e, { type: action, ...row })\r\n                      }\r\n                    >\r\n                      {getActionIconType(action, i)}\r\n                    </IconButton>\r\n                  );\r\n                })}\r\n              </TableCell>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </StyledTableRow>\r\n        );\r\n      });\r\n  };\r\n\r\n  const getActionIconType = (type, index) => {\r\n    switch (type) {\r\n      case 'delete':\r\n        return <Icon.Trash2 key={index} color=\"red\" />;\r\n      case 'edit':\r\n        return <Icon.Edit key={index} color=\"black\" />;\r\n      case 'play':\r\n        return <Icon.PlayCircle key={index} color=\"black\" />;\r\n      case 'pause':\r\n        return <Icon.PauseCircle key={index} color=\"black\" />;\r\n      case 'attachment':\r\n        return <Icon.Paperclip key={index} color=\"blue\" />;\r\n      case 'correct':\r\n        return <Icon.CheckCircle key={index} color=\"green\" />;\r\n      case 'close':\r\n        return <Icon.XCircle key={index} color=\"red\" />;\r\n      default: \r\n      return null\r\n    }\r\n  };\r\n  return (\r\n    <Grid conatiner={true} className=\"w-full\">\r\n      <Grid item>\r\n        <Grid container={true} justify=\"space-between\" alignItems=\"flex-start\">\r\n          <Grid item>\r\n            {search ? <Search handleSearchChange={handleSearchChange} /> : ''}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <Paper elevation={1}>\r\n          <TableContainer className={classes.container}>\r\n            <Table>\r\n              <TableHead className={classes.table_head}>\r\n                {renderTableColumns()}\r\n              </TableHead>\r\n              <TableBody ref={refs}>{renderTableRows()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          alignItems=\"flex-start\"\r\n          className={classes.paginationContainer}\r\n        >\r\n          <Grid item>\r\n            {pagination ? (\r\n              <Pagination\r\n                color=\"secondary\"\r\n                shape=\"rounded\"\r\n                count={count}\r\n                page={page}\r\n                showFirstButton\r\n                showLastButton\r\n                onChange={handleChange}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            {pagerows ? (\r\n              <FormControl\r\n                className={classes.rowPageContainer}\r\n                style={{ padding: 15 }}\r\n              >\r\n                <Select\r\n                  labelId=\"customized-select-label\"\r\n                  id=\"customized-select\"\r\n                  value={rowsPerPage}\r\n                  IconComponent={iconComponent}\r\n                  onChange={handleChangeRowsPerPage}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <MenuItem value={5}>5</MenuItem>\r\n                  <MenuItem value={10}>10</MenuItem>\r\n                  <MenuItem value={20}>20</MenuItem>\r\n                  <MenuItem value={30}>30</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as ActionType from '../../Types';\r\nimport { getDataWithToken, postDataWithToken } from '../../Services';\r\n\r\nconst onGetClient = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_CLIENT_SUCCESS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst onGetClientDetails = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_CLIENT_DETAILS_SUCCESS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst onUpdateClientSubscription = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_UPDATE_CLIENT_SUBSRCIPTION,\r\n    payload\r\n  }\r\n}\r\n\r\nconst onGetAllDocuments = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_ALL_DOCUMENTS,\r\n    payload\r\n  }\r\n}\r\n\r\nconst onGetAllRequests = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_ALL_REQUESTS,\r\n    payload\r\n  }\r\n}\r\n// const onLogin = payload => {\r\n//   return {\r\n//     type: ActionType.ADMIN_LOGIN_SUCCESS,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\n// export const setCurrentAdminUser = decoded => {\r\n//   return {\r\n//     type: ActionType.SET_CURRENT_ADMIN_USER,\r\n//     payload: decoded,\r\n//   };\r\n// };\r\n\r\n// export const onForgotPassword = payload => {\r\n//   return {\r\n//     type: ActionType.ADMIN_FORGOT_PASSWORD_SUCCESS,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\nexport const getClient = url => {\r\n  return getDataWithToken(url, onGetClient);\r\n};\r\n\r\nexport const getClientDetails = url => {\r\n  return getDataWithToken(url, onGetClientDetails);\r\n};\r\n\r\nexport const updateClientSubscription = (url, payload) => {\r\n  return postDataWithToken(url, payload, onUpdateClientSubscription);\r\n}\r\n\r\nexport const getAllDocuments = (url) => {\r\n  return getDataWithToken(url, onGetAllDocuments)\r\n}\r\n\r\nexport const getAllRequests = (url) => {\r\n  return getDataWithToken(url, onGetAllRequests);\r\n}\r\n\r\n// export const login = (url, payload) => {\r\n//   return postData(url, payload, onLogin);\r\n// };\r\n\r\n// export const forgotPassword = (url, payload) => {\r\n//   return postData(url, payload, onForgotPassword);\r\n// };\r\n","import React from 'react';\r\n\r\nexport default function Modal({ action }) {\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"text-green-600 border-none font-semibold capitalize m-4 underline text-base\"\r\n        type=\"button\"\r\n        style={{ transition: 'all .15s ease' }}\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        {action}\r\n      </button>\r\n      {showModal ? (\r\n        <>\r\n          <div\r\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n            onClick={() => setShowModal(false)}\r\n          >\r\n            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n              {/*content*/}\r\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                {/*header*/}\r\n                <div className=\"flex items-start justify-center p-4 border-b border-solid border-gray-300 rounded-t\">\r\n                  <h3 className=\"text-2xl font-semibold\">\r\n                    Select file to upload\r\n                  </h3>\r\n                  {/* <button\r\n                    className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                      ×\r\n                    </span>\r\n                  </button> */}\r\n                </div>\r\n                {/*body*/}\r\n                <div className=\"relative p-6 flex-auto\">\r\n                  <p className=\"my-4 text-gray-600 text-lg leading-relaxed\">\r\n                    I always felt like I could do anything. That’s the main\r\n                    thing people are controlled by! Thoughts- their perception\r\n                    of themselves! They're slowed down by their perception of\r\n                    themselves. If you're taught you can’t do anything, you\r\n                    won’t do anything. I was taught I could do everything.\r\n                  </p>\r\n                </div>\r\n                {/*footer*/}\r\n                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\r\n                  <button\r\n                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\r\n                    type=\"button\"\r\n                    style={{ transition: 'all .15s ease' }}\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                    type=\"button\"\r\n                    style={{ transition: 'all .15s ease' }}\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    Save Changes\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Page from 'components/Page';\r\nimport PageSpinner from '../../components/PageSpinner';\r\nimport CustomTable from '../../components/table/CustomTable';\r\n\r\nimport { getAllRequests } from '../../actions/admin/clients/Clients';\r\nimport { adminGetRequests } from '../../apiConstants/apiConstants';\r\n\r\nimport Modal from '../../components/Modal';\r\n\r\nexport default function Requests() {\r\n  const dispatch = useDispatch();\r\n  const adminGetAllDocuments = useSelector(state => state.getAllRequests);\r\n\r\n  const handleClick2 = id => {\r\n  };\r\n  const onLinkClicked = (e, payload) => {\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllRequests(adminGetRequests));\r\n  }, []);\r\n\r\n  const getRows = data => {\r\n    let rows = [];\r\n    // console.log('Data: ' + JSON.stringify(data));\r\n    data &&\r\n      data.map((user, index) => {\r\n        rows.push({\r\n          id: index + 1,\r\n          user: user.companyName,\r\n          accountType: user.accountType,\r\n          companyAddress: user.companyAddress,\r\n          phoneNumber: user.phoneNumber,\r\n          email: user.email,\r\n          website: user.websiteUrl,\r\n          view: (\r\n            <Link\r\n              // to={`/admin/client/details/${user._id}`}\r\n              onClick={() => handleClick2(user._id)}\r\n              to={`/superadmin/client/details/userId=${user._id}`}\r\n              className=\"bg-green-700 text-white rounded-full px-2 py-2\"\r\n            >\r\n              View Document\r\n            </Link>\r\n          )\r\n        });\r\n        return null\r\n      });\r\n    return rows;\r\n  };\r\n  const onActionClicked = (e, payload) => {\r\n    alert(JSON.stringify(payload));\r\n  };\r\n  if (adminGetAllDocuments.documents === 0) {\r\n    return <PageSpinner />;\r\n  }\r\n  return (\r\n    <Page\r\n      title=\"Dropdowns\"\r\n      breadcrumbs={[{ name: 'All Clients', active: true }]}\r\n    >\r\n      <Modal action=\"Show\"/>\r\n      <CustomTable\r\n        pagination\r\n        pagerows\r\n        columns={[\r\n          {\r\n            id: 'id',\r\n            label: 'ID',\r\n            minWidth: 20,\r\n            color: value => 'blue',\r\n          },\r\n          {\r\n            id: 'user',\r\n            label: 'User',\r\n            minWidth: 100,\r\n            color: value => 'blue',\r\n          },\r\n          {\r\n            id: 'requestTitle',\r\n            label: 'Request Title',\r\n            minWidth: 100,\r\n            color: value => 'blue',\r\n          },\r\n          {\r\n            id: 'requestDescription',\r\n            label: 'Request Description',\r\n            minWidth: 150,\r\n            color: value => 'blue',\r\n          },\r\n          {\r\n            id: 'date',\r\n            label: 'Date Created',\r\n            minWidth: 100,\r\n            color: value => 'black',\r\n          },\r\n        ]}\r\n        rows={getRows(adminGetAllDocuments.documents)}\r\n        handleActionClick={onActionClicked}\r\n        handleLinkClick={onLinkClicked}\r\n      />      \r\n    </Page>\r\n  )\r\n}"],"sourceRoot":""}