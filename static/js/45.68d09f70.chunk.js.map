{"version":3,"sources":["components/Page.js","utils/colors.js","actions/admin/clients/Clients.js","components/Modal.js","components/table/Search.js","components/table/CustomTable.js","pages/admin/adminClient.js"],"names":["bem","bn","create","Page","_ref","breadcrumbs","Tag","tag","className","children","restProps","Object","_home_joblyn_Desktop_asiwajudev_crm_2016698b9caf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","title","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","getClient","getClientDetails","updateClientSubscription","getAllDocuments","getAllRequests","_Types__WEBPACK_IMPORTED_MODULE_0__","_Services__WEBPACK_IMPORTED_MODULE_1__","onGetClient","payload","type","ActionType","onGetClientDetails","onUpdateClientSubscription","onGetAllDocuments","onGetAllRequests","url","getDataWithToken","postDataWithToken","Modal","action","_React$useState","React","useState","_React$useState2","_home_joblyn_Desktop_asiwajudev_crm_2016698b9caf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","showModal","setShowModal","Fragment","style","transition","onClick","Search","handleSearchChange","react_default","marginBottom","class","placeholder","onChange","icons_search","iconComponent","props","chevron_down","color","paddingRight","paddingLeft","useStyles","makeStyles","theme","root","width","small","spacing","height","container","maxHeight","paginationContainer","marginTop","rowPageContainer","StyledTableRow","withStyles","&:nth-of-type(odd)","backgroundColor","palette","hover","TableRow","BootstrapInput","label + &","input","borderRadius","position","border","fontSize","padding","transitions","fontFamily","join","&:focus","InputBase","CustomTable","pagination","search","pagerows","rows","columns","actions","handleLinkClick","handleActionClick","id","refs","withEmoji","useRef","slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","items","setItems","_React$useState7","_React$useState8","count","setCount","_React$useState9","_React$useState10","filter","setFilter","console","log","event","target","value","getActionIconType","trash_2","edit","play_circle","pause_circle","paperclip","check_circle","x_circle","Grid","conatiner","item","justify","alignItems","table_Search","toLowerCase","includes","Math","ceil","Paper","elevation","TableContainer","Table","TableHead","table_head","nColumn","nActions","nColumns","column","TableCell","align","minWidth","label","renderTableColumns","TableBody","ref","slice","row","role","tabIndex","cell","cursor","display","justifyContent","Avatar","src","i","IconButton","aria-label","component","paddingTop","paddingBottom","objectSpread","renderTableRows","Pagination","shape","showFirstButton","showLastButton","FormControl","Select","labelId","IconComponent","MenuItem","r","components_Page__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","n","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","_components_PageSpinner__WEBPACK_IMPORTED_MODULE_4__","utils_colors__WEBPACK_IMPORTED_MODULE_5__","_components_table_CustomTable__WEBPACK_IMPORTED_MODULE_6__","_actions_admin_clients_Clients__WEBPACK_IMPORTED_MODULE_7__","_apiConstants_apiConstants__WEBPACK_IMPORTED_MODULE_8__","react_redux__WEBPACK_IMPORTED_MODULE_9__","_components_Modal__WEBPACK_IMPORTED_MODULE_10__","colors","AdminClient","history","useHistory","dispatch","useDispatch","adminGetClient","useSelector","state","adminGetAllClient","params","useParams","users","useEffect","getAllClients","isSuccessful","data","JSON","stringify","user","push","companyName","accountType","companyAddress","phoneNumber","email","website","websiteUrl","view","endpoint","getClientDetail","handleClick2","_id","to","getRows","alert"],"mappings":"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","file":"static/js/45.68d09f70.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n// import Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  // title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {/* {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )} */}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    }),\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import * as ActionType from '../../Types';\nimport { getDataWithToken, postDataWithToken } from '../../Services';\n\nconst onGetClient = payload => {\n  return {\n    type: ActionType.ADMIN_GET_CLIENT_SUCCESS,\n    payload: payload,\n  };\n};\n\nconst onGetClientDetails = payload => {\n  return {\n    type: ActionType.ADMIN_GET_CLIENT_DETAILS_SUCCESS,\n    payload: payload,\n  };\n};\n\nconst onUpdateClientSubscription = payload => {\n  return {\n    type: ActionType.ADMIN_UPDATE_CLIENT_SUBSRCIPTION,\n    payload\n  }\n}\n\nconst onGetAllDocuments = payload => {\n  return {\n    type: ActionType.ADMIN_GET_ALL_DOCUMENTS,\n    payload\n  }\n}\n\nconst onGetAllRequests = payload => {\n  return {\n    type: ActionType.ADMIN_GET_ALL_REQUESTS,\n    payload\n  }\n}\n// const onLogin = payload => {\n//   return {\n//     type: ActionType.ADMIN_LOGIN_SUCCESS,\n//     payload,\n//   };\n// };\n\n// export const setCurrentAdminUser = decoded => {\n//   return {\n//     type: ActionType.SET_CURRENT_ADMIN_USER,\n//     payload: decoded,\n//   };\n// };\n\n// export const onForgotPassword = payload => {\n//   return {\n//     type: ActionType.ADMIN_FORGOT_PASSWORD_SUCCESS,\n//     payload,\n//   };\n// };\n\nexport const getClient = url => {\n  return getDataWithToken(url, onGetClient);\n};\n\nexport const getClientDetails = url => {\n  return getDataWithToken(url, onGetClientDetails);\n};\n\nexport const updateClientSubscription = (url, payload) => {\n  return postDataWithToken(url, payload, onUpdateClientSubscription);\n}\n\nexport const getAllDocuments = (url) => {\n  return getDataWithToken(url, onGetAllDocuments)\n}\n\nexport const getAllRequests = (url) => {\n  return getDataWithToken(url, onGetAllRequests);\n}\n\n// export const login = (url, payload) => {\n//   return postData(url, payload, onLogin);\n// };\n\n// export const forgotPassword = (url, payload) => {\n//   return postData(url, payload, onForgotPassword);\n// };\n","import React from 'react';\n\nexport default function Modal({ action }) {\n  const [showModal, setShowModal] = React.useState(false);\n  return (\n    <>\n      <button\n        className=\"text-green-600 border-none font-semibold capitalize m-4 underline text-base\"\n        type=\"button\"\n        style={{ transition: 'all .15s ease' }}\n        onClick={() => setShowModal(true)}\n      >\n        {action}\n      </button>\n      {showModal ? (\n        <>\n          <div\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n            onClick={() => setShowModal(false)}\n          >\n            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n              {/*content*/}\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                {/*header*/}\n                <div className=\"flex items-start justify-center p-4 border-b border-solid border-gray-300 rounded-t\">\n                  <h3 className=\"text-2xl font-semibold\">\n                    Select file to upload\n                  </h3>\n                  {/* <button\n                    className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                    onClick={() => setShowModal(false)}\n                  >\n                    <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                      ×\n                    </span>\n                  </button> */}\n                </div>\n                {/*body*/}\n                <div className=\"relative p-6 flex-auto\">\n                  <p className=\"my-4 text-gray-600 text-lg leading-relaxed\">\n                    I always felt like I could do anything. That’s the main\n                    thing people are controlled by! Thoughts- their perception\n                    of themselves! They're slowed down by their perception of\n                    themselves. If you're taught you can’t do anything, you\n                    won’t do anything. I was taught I could do everything.\n                  </p>\n                </div>\n                {/*footer*/}\n                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                  <button\n                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                    type=\"button\"\n                    style={{ transition: 'all .15s ease' }}\n                    onClick={() => setShowModal(false)}\n                  >\n                    Close\n                  </button>\n                  <button\n                    className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                    type=\"button\"\n                    style={{ transition: 'all .15s ease' }}\n                    onClick={() => setShowModal(false)}\n                  >\n                    Save Changes\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\nimport * as Icon from \"react-feather\";\n\nconst Search = ({ handleSearchChange }) => {\n  return (\n    <div className=\"search hidden sm:block\" style={{ marginBottom: 30 }}>\n      <input\n        type=\"text\"\n        class=\"search__input input placeholder-theme-13\"\n        placeholder=\"Search\"\n        onChange={handleSearchChange}\n      />\n      {/* <i data-feather=\"search\" className=\"search__icon\"></i> */}\n      <Icon.Search className=\"search__icon\" />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Pagination from '@material-ui/lab/Pagination';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport * as Icon from 'react-feather';\n\nimport Search from './Search';\nimport { Avatar } from '@material-ui/core';\n\nconst iconComponent = props => {\n  return (\n    <Icon.ChevronDown\n      className={props.className}\n      style={{ color: 'white', paddingRight: 5, paddingLeft: 5 }}\n    />\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  container: {\n    maxHeight: 900,\n    // maxWidth: 980,\n  },\n  paginationContainer: {\n    marginTop: 20,\n    height: 32,\n  },\n\n  rowPageContainer: {\n    height: '2px',\n  },\n}));\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n    height: '10px',\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n\n    backgroundColor: '#f50057', //theme.palette.background.paper,\n    color: '#fff',\n    border: '1px solid #ced4da',\n    fontSize: '0.875rem',\n    padding: '5px 26px 5px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['Poppins'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      //borderColor: '#80bdff',\n      // boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      backgroundColor: '#f50057', //theme.palette.background.paper,\n      color: '#fff',\n    },\n  },\n}))(InputBase);\n\nexport default function CustomTable({\n  pagination,\n  search,\n  pagerows,\n  rows,\n  columns,\n  actions,\n  handleLinkClick,\n  handleActionClick,\n  id,\n  withEmoji,\n}) {\n  const refs = useRef(0);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(1);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState(rows);\n  const [count, setCount] = React.useState(items.length / rowsPerPage);\n  const [filter, setFilter] = React.useState('Name');\n  console.log(filter);\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n  const handleChangeRowsPerPage = event => {\n    setPage(1);\n    setRowsPerPage(+event.target.value);\n  };\n  const handleSearchChange = event => {\n    let value = event.target.value.toLowerCase();\n    if (value) {\n      let search = rows.filter(item => item.name.toLowerCase().includes(value));\n\n      setItems(search);\n      // Need to correct our pagination to adapt to new search result\n      setPage(1);\n      setCount(Math.ceil(search.length / rowsPerPage));\n    } else {\n      // On search empty put everything back to initial stage\n      setItems(rows);\n      setPage(1);\n      setCount(Math.ceil(rows.length / rowsPerPage));\n    }\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  console.log(handleFilterChange);\n  const renderTableColumns = () => {\n    let nColumn = null;\n    let nActions = null;\n    let nEmoji = null;\n    console.log(nEmoji);\n\n    const nColumns = columns.map(column => {\n      nColumn = column;\n\n      return (\n        <TableCell\n          key={column.id + id}\n          align={column.align}\n          style={{ minWidth: column.minWidth }}\n        >\n          {column.label}\n        </TableCell>\n      );\n    });\n\n    if (actions) {\n      nActions = (\n        <TableCell\n          key={nColumn.id + id}\n          align={nColumn.align}\n          style={{ minWidth: nColumn.minWidth }}\n        >\n          Actions\n        </TableCell>\n      );\n    }\n    // if (withEmoji) {\n    //   nEmoji = (\n    //     <TableCell\n    //       key={nColumn.id + id}\n    //       align={nColumn.align}\n    //       style={{ minWidth: nColumn.minWidth }}\n    //     >\n    //       Preview\n    //     </TableCell>\n    //   );\n    // }\n    return (\n      <TableRow>\n        {nColumns}\n        {nActions}\n      </TableRow>\n    );\n  };\n  const renderTableRows = () => {\n    let nColumn = null;\n    return items\n      .slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\n      .map(row => {\n        return (\n          <StyledTableRow role=\"checkbox\" tabIndex={-1} key={row.id + 'Row'}>\n            {columns.map(column => {\n              nColumn = column;\n              const value = row[column.id];\n\n              return (\n                <TableCell\n                  key={column.id + 'Cell' + id}\n                  align={column.align}\n                  className={classes.cell}\n                  style={{\n                    color: column.color(value),\n                  }}\n                >\n                  {column.type && column.type === 'link' ? (\n                    <div\n                      color=\"inherit\"\n                      onClick={e => handleLinkClick(e, row)}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      {value}\n                    </div>\n                  ) : column.type && column.type === 'image' ? (\n                    <span\n                      style={{\n                        display: 'inline-flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <Avatar src={row.src && row.src} className=\"small\" />{' '}\n                      <span className=\"px-4\">{value}</span>\n                    </span>\n                  ) : (\n                    value\n                  )}\n                </TableCell>\n              );\n            })}\n            {actions ? (\n              <TableCell key={nColumn.id + 'Cell'} align={nColumn.align}>\n                {actions.map((action, i) => {\n                  return (\n                    <IconButton\n                      key={i + 'Action' + id}\n                      aria-label=\"upload picture\"\n                      component=\"span\"\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\n                      onClick={e =>\n                        handleActionClick(e, { type: action, ...row })\n                      }\n                    >\n                      {getActionIconType(action, i)}\n                    </IconButton>\n                  );\n                })}\n              </TableCell>\n            ) : (\n              ''\n            )}\n          </StyledTableRow>\n        );\n      });\n  };\n\n  const getActionIconType = (type, index) => {\n    switch (type) {\n      case 'delete':\n        return <Icon.Trash2 key={index} color=\"red\" />;\n      case 'edit':\n        return <Icon.Edit key={index} color=\"black\" />;\n      case 'play':\n        return <Icon.PlayCircle key={index} color=\"black\" />;\n      case 'pause':\n        return <Icon.PauseCircle key={index} color=\"black\" />;\n      case 'attachment':\n        return <Icon.Paperclip key={index} color=\"blue\" />;\n      case 'correct':\n        return <Icon.CheckCircle key={index} color=\"green\" />;\n      case 'close':\n        return <Icon.XCircle key={index} color=\"red\" />;\n      default: \n      return null\n    }\n  };\n  return (\n    <Grid conatiner={true} className=\"w-full\">\n      <Grid item>\n        <Grid container={true} justify=\"space-between\" alignItems=\"flex-start\">\n          <Grid item>\n            {search ? <Search handleSearchChange={handleSearchChange} /> : ''}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Paper elevation={1}>\n          <TableContainer className={classes.container}>\n            <Table>\n              <TableHead className={classes.table_head}>\n                {renderTableColumns()}\n              </TableHead>\n              <TableBody ref={refs}>{renderTableRows()}</TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Grid>\n      <Grid item>\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"flex-start\"\n          className={classes.paginationContainer}\n        >\n          <Grid item>\n            {pagination ? (\n              <Pagination\n                color=\"secondary\"\n                shape=\"rounded\"\n                count={count}\n                page={page}\n                showFirstButton\n                showLastButton\n                onChange={handleChange}\n              />\n            ) : (\n              ''\n            )}\n          </Grid>\n          <Grid item>\n            {pagerows ? (\n              <FormControl\n                className={classes.rowPageContainer}\n                style={{ padding: 15 }}\n              >\n                <Select\n                  labelId=\"customized-select-label\"\n                  id=\"customized-select\"\n                  value={rowsPerPage}\n                  IconComponent={iconComponent}\n                  onChange={handleChangeRowsPerPage}\n                  input={<BootstrapInput />}\n                >\n                  <MenuItem value={5}>5</MenuItem>\n                  <MenuItem value={10}>10</MenuItem>\n                  <MenuItem value={20}>20</MenuItem>\n                  <MenuItem value={30}>30</MenuItem>\n                </Select>\n              </FormControl>\n            ) : (\n              ''\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import Page from 'components/Page';\nimport React, { useEffect,\n  //  useRef \n  } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport PageSpinner from '../../components/PageSpinner';\n// import ReactHTMLTableToExcel from 'react-html-table-to-excel';\n// import {\n  // Button,\n  // Card,\n  // CardBody,\n  // CardHeader,\n  // Col,\n  // DropdownItem,\n  // DropdownMenu,\n  // DropdownToggle,\n  // Row,\n  // UncontrolledButtonDropdown,\n// } from 'reactstrap';\nimport { getThemeColors } from 'utils/colors';\nimport CustomTable from '../../components/table/CustomTable';\n\nimport {\n  getClient,\n  getClientDetails,\n} from '../../actions/admin/clients/Clients';\nimport {\n  getAllClients,\n  getClientDetail,\n} from '../../apiConstants/apiConstants';\nimport { useDispatch, useSelector } from 'react-redux';\n// import ExcelTable from '../../components/ExportToExcel';\nimport Modal from '../../components/Modal';\n\nconst colors = getThemeColors();\nconsole.log(colors);\nconst AdminClient = () => {\n  // const excelTable = useRef('');\n  // console.log('Data' + data.data);\n  const history = useHistory();\n  console.log(history)\n  const dispatch = useDispatch();\n  const adminGetClient = useSelector(state => state.adminGetAllClient);\n  const { params } = useParams();\n  console.log(params);\n\n  console.log('Payload:' + adminGetClient.users);\n\n  // useEffect(()=> {\n\n  // },[adminGetClient])\n  const handleClick2 = id => {\n    const endpoint = getClientDetail + id; //'5f5265a3d74c2bb6428f73ce';\n    //const endpoint = getClientDetail + userId;\n    //console.log('Details; ' + userId);\n    dispatch(getClientDetails(endpoint));\n  };\n\n  const onLinkClicked = (e, payload) => {\n    // console.log(JSON.stringify(payload));\n    // history.push('/admin/client/details');\n  };\n  // const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getClient(getAllClients));\n  }, []);\n\n  if (adminGetClient.isSuccessful === true) {\n    console.log('Check: ' + adminGetClient.users);\n  }\n\n  const getRows = data => {\n    let rows = [];\n    console.log('Data: ' + JSON.stringify(data));\n    //let data = adminGetClient.users && adminGetClient.users;\n    data &&\n      data.map((user, index) => {\n        rows.push({\n          id: index + 1,\n          user: user.companyName,\n          accountType: user.accountType,\n          companyAddress: user.companyAddress,\n          phoneNumber: user.phoneNumber,\n          email: user.email,\n          website: user.websiteUrl,\n          view: (\n            <Link\n              // to={`/admin/client/details/${user._id}`}\n              onClick={() => handleClick2(user._id)}\n              to={`/admin/client/details/userId=${user._id}`}\n              className=\"bg-green-700 text-white rounded-full px-2 py-2\"\n            >\n              View Details\n            </Link>\n          ),\n        });\n        return null;\n      });\n    return rows;\n  };\n  const onActionClicked = (e, payload) => {\n    alert(JSON.stringify(payload));\n  };\n  if (adminGetClient.users.length === 0) {\n    return <PageSpinner />;\n  }\n  return (\n    <Page\n      title=\"Dropdowns\"\n      breadcrumbs={[{ name: 'All Clients', active: true }]}\n    >\n      <Modal />\n      {/* <ReactHTMLTableToExcel\n        className=\"btn btn-info\"\n        table={excelTable}\n        filename=\"fileName\"\n        sheet=\"Sheet\"\n        buttonText=\"Export To Excel\"\n      /> */}\n      <CustomTable\n        pagination\n        pagerows\n        columns={[\n          {\n            id: 'id',\n            label: 'ID',\n            minWidth: 20,\n            color: value => 'blue',\n          },\n\n          {\n            id: 'user',\n            label: 'User',\n            minWidth: 100,\n            color: value => 'blue',\n          },\n          {\n            id: 'accountType',\n            label: 'Account Type',\n            minWidth: 50,\n            color: value => 'blue',\n          },\n          {\n            id: 'companyAddress',\n            label: 'Address',\n            minWidth: 150,\n            align: 'center',\n            color: value => 'blue',\n          },\n          {\n            id: 'phoneNumber',\n            label: 'Phone Number',\n            minWidth: 50,\n            align: 'center',\n            color: value => 'blue',\n          },\n          {\n            id: 'email',\n            label: 'Email',\n            minWidth: 100,\n            align: 'center',\n            color: value => 'blue',\n          },\n          {\n            id: 'website',\n            label: 'Website',\n            minWidth: 80,\n            align: 'center',\n            color: value => 'blue',\n          },\n          {\n            id: 'view',\n            label: 'Actions',\n            minWidth: 150,\n            align: 'center',\n            color: value => 'blue',\n            type: 'link',\n          },\n        ]}\n        rows={getRows(adminGetClient.users)}\n        handleActionClick={onActionClicked}\n        handleLinkClick={onLinkClicked}\n      />\n      {/* <ExcelTable id={excelTable} exportData={adminGetClient.user} /> */}\n\n      {/* <Row\n        <Col md={6}>\n          <Card>\n            <CardHeader>Single button dropdowns</CardHeader>\n            <CardBody>\n              {colors.map((color, index) => (\n                <UncontrolledButtonDropdown key={index}>\n                  <DropdownToggle\n                    caret\n                    color={color}\n                    className=\"text-capitalize m-1\"\n                  >\n                    {color}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledButtonDropdown>\n              ))}\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6}>\n          <Card>\n            <CardHeader>Split button dropdowns</CardHeader>\n            <CardBody>\n              {colors.map((color, index) => (\n                <UncontrolledButtonDropdown\n                  key={index}\n                  className=\"text-capitalize m-1\"\n                >\n                  <Button color={color}>{color}</Button>\n                  <DropdownToggle caret color={color} />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledButtonDropdown>\n              ))}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6}>\n          <Card>\n            <CardHeader>Sizing</CardHeader>\n            <CardBody>\n              <UncontrolledButtonDropdown className=\"m-1\">\n                <DropdownToggle caret size=\"lg\">\n                  Large\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>Another Action</DropdownItem>\n                  <DropdownItem>Another Action</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n\n              <UncontrolledButtonDropdown className=\"m-1\">\n                <DropdownToggle caret>Normal</DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>Another Action</DropdownItem>\n                  <DropdownItem>Another Action</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n\n              <UncontrolledButtonDropdown className=\"m-1\">\n                <DropdownToggle caret size=\"sm\">\n                  Small\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>Another Action</DropdownItem>\n                  <DropdownItem>Another Action</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6}>\n          <Card>\n            <CardHeader>Dropup</CardHeader>\n            <CardBody>\n              <UncontrolledButtonDropdown direction=\"up\">\n                <DropdownToggle caret size=\"lg\">\n                  Dropup\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>Another Action</DropdownItem>\n                  <DropdownItem>Another Action</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6}>\n          <Card>\n            <CardHeader>Alignment</CardHeader>\n            <CardBody>\n              <UncontrolledButtonDropdown className=\"m-1\">\n                <DropdownToggle caret>\n                  This dropdown's menu is right-aligned\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem header>Header</DropdownItem>\n                  <DropdownItem disabled>Action</DropdownItem>\n                  <DropdownItem>Another Action</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>Another Action</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n\n              <UncontrolledButtonDropdown className=\"m-1\">\n                <DropdownToggle caret>\n                  This dropdown's menu is left-aligned\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem header>Header</DropdownItem>\n                  <DropdownItem disabled>Action</DropdownItem>\n                  <DropdownItem>Another Action</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>Another Action</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n     */}\n    </Page>\n  );\n};\n\nexport default AdminClient;\n\n/*\n\n[\n          {\n            id: 1,\n            user: 'Sarah Doe',\n            accountType: 'HipHop Class',\n            commission: `${4}%`,\n            view: (\n              <Link\n                to=\"/admin/client/details\"\n                // to={`/admin/client/details/${id}`}\n                className=\"bg-green-700 text-white rounded-full px-6 py-2\"\n              >\n                View Details\n              </Link>\n            ),\n            total: 44,\n          },\n          // {\n          //   id: 2,\n          //   user: 'Sarah Doe',\n          //   accountType: 'HipHop Class',\n          //   commission: `${4}%`,\n          //   view: (\n          //     <Link className=\"bg-green-700 text-white rounded-full px-6 py-2\">\n          //       View Details\n          //     </Link>\n          //   ),\n          //   total: 44,\n          // },\n          // {\n          //   id: 3,\n          //   user: 'Sarah Doe',\n          //   accountType: 'HipHop Class',\n          //   commission: `${4}%`,\n          //   view: (\n          //     <Link className=\"bg-green-700 text-white rounded-full px-6 py-2\">\n          //       View Details\n          //     </Link>\n          //   ),\n          //   total: 44,\n          // },\n          // {\n          //   id: 4,\n          //   user: 'Sarah Doe',\n          //   accountType: 'HipHop Class',\n          //   commission: `${4}%`,\n          //   view: (\n          //     <Link className=\"bg-green-700 text-white rounded-full px-6 py-2\">\n          //       View Details\n          //     </Link>\n          //   ),\n          //   total: 44,\n          // },\n          // {\n          //   id: 5,\n          //   user: 'Sarah Doe',\n          //   accountType: 'HipHop Class',\n          //   commission: `${4}%`,\n          //   view: (\n          //     <Link className=\"bg-green-700 text-white rounded-full px-6 py-2\">\n          //       View Details\n          //     </Link>\n          //   ),\n          //   total: 44,\n          // },\n          // {\n          //   id: 6,\n          //   user: 'Sarah Doe',\n          //   accountType: 'HipHop Class',\n          //   commission: `${4}%`,\n          //   view: (\n          //     <Link className=\"bg-green-700 text-white rounded-full px-6 py-2\">\n          //       View Details\n          //     </Link>\n          //   ),\n          //   total: 44,\n          // },\n        ]\n*/\n"],"sourceRoot":""}