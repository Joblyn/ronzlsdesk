{"version":3,"sources":["components/Page.js","components/table/Search.js","components/table/CustomTable.js","pages/user/viewDocuments.js"],"names":["bem","bn","create","Page","_ref","breadcrumbs","Tag","tag","className","children","restProps","Object","_home_joblyn_Desktop_asiwajudev_crm_2016698b9caf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","title","Search","handleSearchChange","react_default","style","marginBottom","type","class","placeholder","onChange","icons_search","iconComponent","props","chevron_down","color","paddingRight","paddingLeft","useStyles","makeStyles","theme","root","width","small","spacing","height","container","maxHeight","paginationContainer","marginTop","rowPageContainer","StyledTableRow","withStyles","&:nth-of-type(odd)","backgroundColor","palette","action","hover","TableRow","BootstrapInput","label + &","input","borderRadius","position","border","fontSize","padding","transition","transitions","fontFamily","join","&:focus","InputBase","CustomTable","pagination","search","pagerows","rows","columns","actions","handleLinkClick","handleActionClick","id","refs","withEmoji","useRef","_React$useState","React","useState","_React$useState2","slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","items","setItems","_React$useState7","_React$useState8","count","setCount","_React$useState9","_React$useState10","filter","setFilter","console","log","event","target","value","getActionIconType","trash_2","edit","play_circle","pause_circle","paperclip","check_circle","x_circle","Grid","conatiner","item","justify","alignItems","table_Search","toLowerCase","includes","Math","ceil","Paper","elevation","TableContainer","Table","TableHead","table_head","nColumn","nActions","nColumns","column","TableCell","align","minWidth","label","renderTableColumns","TableBody","ref","slice","row","role","tabIndex","cell","onClick","cursor","display","justifyContent","Avatar","src","i","IconButton","aria-label","component","paddingTop","paddingBottom","objectSpread","renderTableRows","Pagination","shape","showFirstButton","showLastButton","FormControl","Select","labelId","IconComponent","MenuItem","ViewDocuments","dispatch","useDispatch","_useState","_useState2","_home_joblyn_Desktop_asiwajudev_crm_2016698b9caf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","category","setCategory","userGetDocumentsSentByUser","useSelector","state","userGetDocumentsSentByAdmin","useEffect","getDocumentSentByUser","userGetDocumentSentByUser","getDocumentSentByAdmin","userGetDocumentSentByAdminToUser","isSuccessful","documents","components_Page__WEBPACK_IMPORTED_MODULE_4__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","_components_table_CustomTable__WEBPACK_IMPORTED_MODULE_5__","document","push","getRows","_components_PageSpinner__WEBPACK_IMPORTED_MODULE_8__"],"mappings":"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","file":"static/js/60.ed0e9a52.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n// import Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  // title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {/* {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )} */}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    }),\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from \"react\";\nimport * as Icon from \"react-feather\";\n\nconst Search = ({ handleSearchChange }) => {\n  return (\n    <div className=\"search hidden sm:block\" style={{ marginBottom: 30 }}>\n      <input\n        type=\"text\"\n        class=\"search__input input placeholder-theme-13\"\n        placeholder=\"Search\"\n        onChange={handleSearchChange}\n      />\n      {/* <i data-feather=\"search\" className=\"search__icon\"></i> */}\n      <Icon.Search className=\"search__icon\" />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Pagination from '@material-ui/lab/Pagination';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport * as Icon from 'react-feather';\n\nimport Search from './Search';\nimport { Avatar } from '@material-ui/core';\n\nconst iconComponent = props => {\n  return (\n    <Icon.ChevronDown\n      className={props.className}\n      style={{ color: 'white', paddingRight: 5, paddingLeft: 5 }}\n    />\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  container: {\n    maxHeight: 900,\n    // maxWidth: 980,\n  },\n  paginationContainer: {\n    marginTop: 20,\n    height: 32,\n  },\n\n  rowPageContainer: {\n    height: '2px',\n  },\n}));\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n    height: '10px',\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n\n    backgroundColor: '#f50057', //theme.palette.background.paper,\n    color: '#fff',\n    border: '1px solid #ced4da',\n    fontSize: '0.875rem',\n    padding: '5px 26px 5px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['Poppins'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      //borderColor: '#80bdff',\n      // boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      backgroundColor: '#f50057', //theme.palette.background.paper,\n      color: '#fff',\n    },\n  },\n}))(InputBase);\n\nexport default function CustomTable({\n  pagination,\n  search,\n  pagerows,\n  rows,\n  columns,\n  actions,\n  handleLinkClick,\n  handleActionClick,\n  id,\n  withEmoji,\n}) {\n  const refs = useRef(0);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(1);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [items, setItems] = React.useState(rows);\n  const [count, setCount] = React.useState(items.length / rowsPerPage);\n  const [filter, setFilter] = React.useState('Name');\n  console.log(filter);\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n  const handleChangeRowsPerPage = event => {\n    setPage(1);\n    setRowsPerPage(+event.target.value);\n  };\n  const handleSearchChange = event => {\n    let value = event.target.value.toLowerCase();\n    if (value) {\n      let search = rows.filter(item => item.name.toLowerCase().includes(value));\n\n      setItems(search);\n      // Need to correct our pagination to adapt to new search result\n      setPage(1);\n      setCount(Math.ceil(search.length / rowsPerPage));\n    } else {\n      // On search empty put everything back to initial stage\n      setItems(rows);\n      setPage(1);\n      setCount(Math.ceil(rows.length / rowsPerPage));\n    }\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  console.log(handleFilterChange);\n  const renderTableColumns = () => {\n    let nColumn = null;\n    let nActions = null;\n    let nEmoji = null;\n    console.log(nEmoji);\n\n    const nColumns = columns.map(column => {\n      nColumn = column;\n\n      return (\n        <TableCell\n          key={column.id + id}\n          align={column.align}\n          style={{ minWidth: column.minWidth }}\n        >\n          {column.label}\n        </TableCell>\n      );\n    });\n\n    if (actions) {\n      nActions = (\n        <TableCell\n          key={nColumn.id + id}\n          align={nColumn.align}\n          style={{ minWidth: nColumn.minWidth }}\n        >\n          Actions\n        </TableCell>\n      );\n    }\n    // if (withEmoji) {\n    //   nEmoji = (\n    //     <TableCell\n    //       key={nColumn.id + id}\n    //       align={nColumn.align}\n    //       style={{ minWidth: nColumn.minWidth }}\n    //     >\n    //       Preview\n    //     </TableCell>\n    //   );\n    // }\n    return (\n      <TableRow>\n        {nColumns}\n        {nActions}\n      </TableRow>\n    );\n  };\n  const renderTableRows = () => {\n    let nColumn = null;\n    return items\n      .slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\n      .map(row => {\n        return (\n          <StyledTableRow role=\"checkbox\" tabIndex={-1} key={row.id + 'Row'}>\n            {columns.map(column => {\n              nColumn = column;\n              const value = row[column.id];\n\n              return (\n                <TableCell\n                  key={column.id + 'Cell' + id}\n                  align={column.align}\n                  className={classes.cell}\n                  style={{\n                    color: column.color(value),\n                  }}\n                >\n                  {column.type && column.type === 'link' ? (\n                    <div\n                      color=\"inherit\"\n                      onClick={e => handleLinkClick(e, row)}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      {value}\n                    </div>\n                  ) : column.type && column.type === 'image' ? (\n                    <span\n                      style={{\n                        display: 'inline-flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <Avatar src={row.src && row.src} className=\"small\" />{' '}\n                      <span className=\"px-4\">{value}</span>\n                    </span>\n                  ) : (\n                    value\n                  )}\n                </TableCell>\n              );\n            })}\n            {actions ? (\n              <TableCell key={nColumn.id + 'Cell'} align={nColumn.align}>\n                {actions.map((action, i) => {\n                  return (\n                    <IconButton\n                      key={i + 'Action' + id}\n                      aria-label=\"upload picture\"\n                      component=\"span\"\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\n                      onClick={e =>\n                        handleActionClick(e, { type: action, ...row })\n                      }\n                    >\n                      {getActionIconType(action, i)}\n                    </IconButton>\n                  );\n                })}\n              </TableCell>\n            ) : (\n              ''\n            )}\n          </StyledTableRow>\n        );\n      });\n  };\n\n  const getActionIconType = (type, index) => {\n    switch (type) {\n      case 'delete':\n        return <Icon.Trash2 key={index} color=\"red\" />;\n      case 'edit':\n        return <Icon.Edit key={index} color=\"black\" />;\n      case 'play':\n        return <Icon.PlayCircle key={index} color=\"black\" />;\n      case 'pause':\n        return <Icon.PauseCircle key={index} color=\"black\" />;\n      case 'attachment':\n        return <Icon.Paperclip key={index} color=\"blue\" />;\n      case 'correct':\n        return <Icon.CheckCircle key={index} color=\"green\" />;\n      case 'close':\n        return <Icon.XCircle key={index} color=\"red\" />;\n      default: \n      return null\n    }\n  };\n  return (\n    <Grid conatiner={true} className=\"w-full\">\n      <Grid item>\n        <Grid container={true} justify=\"space-between\" alignItems=\"flex-start\">\n          <Grid item>\n            {search ? <Search handleSearchChange={handleSearchChange} /> : ''}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Paper elevation={1}>\n          <TableContainer className={classes.container}>\n            <Table>\n              <TableHead className={classes.table_head}>\n                {renderTableColumns()}\n              </TableHead>\n              <TableBody ref={refs}>{renderTableRows()}</TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Grid>\n      <Grid item>\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"flex-start\"\n          className={classes.paginationContainer}\n        >\n          <Grid item>\n            {pagination ? (\n              <Pagination\n                color=\"secondary\"\n                shape=\"rounded\"\n                count={count}\n                page={page}\n                showFirstButton\n                showLastButton\n                onChange={handleChange}\n              />\n            ) : (\n              ''\n            )}\n          </Grid>\n          <Grid item>\n            {pagerows ? (\n              <FormControl\n                className={classes.rowPageContainer}\n                style={{ padding: 15 }}\n              >\n                <Select\n                  labelId=\"customized-select-label\"\n                  id=\"customized-select\"\n                  value={rowsPerPage}\n                  IconComponent={iconComponent}\n                  onChange={handleChangeRowsPerPage}\n                  input={<BootstrapInput />}\n                >\n                  <MenuItem value={5}>5</MenuItem>\n                  <MenuItem value={10}>10</MenuItem>\n                  <MenuItem value={20}>20</MenuItem>\n                  <MenuItem value={30}>30</MenuItem>\n                </Select>\n              </FormControl>\n            ) : (\n              ''\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Page from 'components/Page';\nimport CustomTable from '../../components/table/CustomTable';\nimport { getDocumentSentByAdmin, getDocumentSentByUser } from '../../actions/user/Users';\nimport { userGetDocumentSentByAdminToUser, userGetDocumentSentByUser } from '../../apiConstants/apiConstants';\nimport PageSpinner from '../../components/PageSpinner';\n\nexport default function ViewDocuments() {\n  const dispatch = useDispatch();\n  const [category, setCategory] = useState('sent');\n  const userGetDocumentsSentByUser = useSelector(state => state.userGetDocumentsSentByUser);\n  const userGetDocumentsSentByAdmin = useSelector(state => state.userGetDocumentsSentByAdmin);\n \n  const getReceivedDocuments = () => dispatch(getDocumentSentByAdmin(userGetDocumentSentByAdminToUser)); \n  const getSentDocuments = () => dispatch(getDocumentSentByUser(userGetDocumentSentByUser));\n\n  useEffect(() => {\n    if(category === 'sent') { getSentDocuments() } \n    else { getReceivedDocuments() }\n    \n  }, [category]);\n\n  if(userGetDocumentsSentByUser.isSuccessful || userGetDocumentsSentByUser.isSuccessful) {\n    console.log((userGetDocumentsSentByUser.documents || userGetDocumentsSentByUser.documents)) \n  }\n  \n  const getRows = (documents) => {\n    let rows = [];\n\n    documents && documents.map((document, i) => (\n      rows.push({\n        id: i + 1,\n      })\n    ));\n    return rows;\n  };\n\n  if (!(userGetDocumentsSentByUser.isSuccessful || userGetDocumentsSentByUser.isSuccessful)) {\n    return <PageSpinner />\n  }\n  return (\n    <Page\n      className=\"DashboardPage\"\n      title=\"Dashboard\"\n      breadcrumbs={[{ name: 'View Documents', active: true }]} \n    >\n    <div className=\"links\">\n      <Link className={category === 'sent' ? 'active' : ''} to=\"#\" onClick={() => setCategory('sent')}\n      >Documents Sent</Link>\n      <Link className={category === 'received' ? 'active' : ''} to=\"#\" onClick={() => setCategory('received')}>Documents Recieved</Link>\n    </div>\n    {userGetDocumentsSentByUser.documents.length ||  userGetDocumentsSentByUser.documents.length ?\n      <CustomTable\n        pagination\n        pagerows\n        columns={[\n          {\n            id: 'id',\n            label: 'ID',\n            minWidth: 20,\n            color: value => 'blue',\n          },\n          {\n            id: 'documentName',\n            label: 'Document Name',\n            minWidth: 150,\n            color: value => 'blue',\n          },\n          {\n            id: 'document',\n            label: 'Document Uploaded',\n            minWidth: 150,\n            color: value => 'blue',\n          },\n          {\n            id: 'date',\n            label: 'Date Uploaded',\n            minWidth: 100,\n            color: value => 'black',\n          },\n        ]}\n        rows={getRows(userGetDocumentsSentByUser.documents || userGetDocumentsSentByAdmin.documents)}\n      /> : <div className=\"empty-table\">\n        <p><em>{category === 'sent' ? 'No documents sent to admin' : 'No documents received from admin'}</em></p>\n      </div>\n    }\n    </Page>\n  )\n}"],"sourceRoot":""}