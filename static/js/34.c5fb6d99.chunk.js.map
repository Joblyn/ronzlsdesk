{"version":3,"sources":["components/Page.js","components/table/Search.js","components/table/CustomTable.js","actions/admin/clients/Clients.js","pages/admin/documentsSent.js"],"names":["bem","bn","create","Page","_ref","breadcrumbs","Tag","tag","className","children","restProps","Object","C_Users_hp_Desktop_Job_ronzlsdesk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","title","Search","handleSearchChange","react_default","style","marginBottom","type","class","placeholder","onChange","icons_search","iconComponent","props","chevron_down","color","paddingRight","paddingLeft","useStyles","makeStyles","theme","root","width","small","spacing","height","container","maxHeight","paginationContainer","marginTop","rowPageContainer","StyledTableRow","withStyles","&:nth-of-type(odd)","backgroundColor","palette","action","hover","TableRow","BootstrapInput","label + &","input","borderRadius","position","border","fontSize","padding","transition","transitions","fontFamily","join","&:focus","InputBase","CustomTable","pagination","search","pagerows","rows","columns","actions","handleLinkClick","handleActionClick","id","refs","withEmoji","useRef","_React$useState","React","useState","_React$useState2","slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","items","setItems","_React$useState7","_React$useState8","count","setCount","_React$useState9","_React$useState10","filter","setFilter","console","log","event","target","value","getActionIconType","trash_2","edit","play_circle","pause_circle","paperclip","check_circle","x_circle","Grid","display","flexDirection","item","justify","alignItems","table_Search","toLowerCase","includes","Math","ceil","Paper","elevation","TableContainer","Table","TableHead","table_head","nColumn","nActions","nColumns","column","TableCell","align","minWidth","label","renderTableColumns","TableBody","ref","slice","row","role","tabIndex","cell","onClick","cursor","justifyContent","Avatar","src","i","IconButton","aria-label","component","paddingTop","paddingBottom","objectSpread","renderTableRows","Pagination","shape","showFirstButton","showLastButton","FormControl","Select","labelId","IconComponent","MenuItem","__webpack_require__","d","__webpack_exports__","adminGetClients","getAppointments","confirmAppointment","getClient","getClientDetails","updateClientSubscription","getAllDocuments","getDocumentsSentToUser","getDocumentsReceivedFromUser","getAllRequests","_Types__WEBPACK_IMPORTED_MODULE_0__","_Services__WEBPACK_IMPORTED_MODULE_1__","onGetClient","payload","ActionType","onGetClientDetails","onUpdateClientSubscription","onGetAllDocuments","onGetDocumentsSentToUser","onGetDocumentsReceivedFromUser","onGetAllRequests","onAdminGetClients","onGetAppoinments","onConfirmAppoinment","url","getDataWithToken","postDataWithToken","r","AdminSentDocuments","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","components_Page__WEBPACK_IMPORTED_MODULE_2__","_components_table_CustomTable__WEBPACK_IMPORTED_MODULE_3__","_components_PageSpinner__WEBPACK_IMPORTED_MODULE_4__","_actions_admin_clients_Clients__WEBPACK_IMPORTED_MODULE_5__","_apiConstants_apiConstants__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","dispatch","useDispatch","adminGetSentDocuments","useSelector","state","useEffect","adminGetDocumentsSentToUser","isSuccessful","to","overflowX","documents","reverse","document","client","receiver","companyName","push","docName","date","created_dt","view","size","href","attachedFileUrl","getRows"],"mappings":"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","file":"static/js/34.c5fb6d99.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\n// import Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  // title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {/* {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )} */}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport * as Icon from \"react-feather\";\r\n\r\nconst Search = ({ handleSearchChange }) => {\r\n  return (\r\n    <div className=\"search hidden sm:block\" style={{ marginBottom: 30 }}>\r\n      <input\r\n        type=\"text\"\r\n        class=\"search__input input placeholder-theme-13\"\r\n        placeholder=\"Search\"\r\n        onChange={handleSearchChange}\r\n      />\r\n      {/* <i data-feather=\"search\" className=\"search__icon\"></i> */}\r\n      <Icon.Search className=\"search__icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Icon from 'react-feather';\r\n\r\nimport Search from './Search';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nconst iconComponent = props => {\r\n  return (\r\n    <Icon.ChevronDown\r\n      className={props.className}\r\n      style={{ color: 'white', paddingRight: 5, paddingLeft: 5 }}\r\n    />\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  container: {\r\n    maxHeight: 900,\r\n    // maxWidth: 980,\r\n  },\r\n  paginationContainer: {\r\n    marginTop: 20,\r\n    height: 32,\r\n  },\r\n\r\n  rowPageContainer: {\r\n    height: '2px',\r\n  },\r\n}));\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    height: '10px',\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n\r\n    backgroundColor: '#f50057', //theme.palette.background.paper,\r\n    color: '#fff',\r\n    border: '1px solid #ced4da',\r\n    fontSize: '0.875rem',\r\n    padding: '5px 26px 5px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: ['Poppins'].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      //borderColor: '#80bdff',\r\n      // boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n      backgroundColor: '#f50057', //theme.palette.background.paper,\r\n      color: '#fff',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function CustomTable({\r\n  pagination,\r\n  search,\r\n  pagerows,\r\n  rows,\r\n  columns,\r\n  actions,\r\n  handleLinkClick,\r\n  handleActionClick,\r\n  id,\r\n  withEmoji,\r\n}) {\r\n  const refs = useRef(0);\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [items, setItems] = React.useState(rows);\r\n  const [count, setCount] = React.useState(items.length / rowsPerPage);\r\n  const [filter, setFilter] = React.useState('Name');\r\n  console.log(filter);\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setPage(1);\r\n    setRowsPerPage(+event.target.value);\r\n  };\r\n  const handleSearchChange = event => {\r\n    let value = event.target.value.toLowerCase();\r\n    if (value) {\r\n      let search = rows.filter(item => item.name.toLowerCase().includes(value));\r\n\r\n      setItems(search);\r\n      // Need to correct our pagination to adapt to new search result\r\n      setPage(1);\r\n      setCount(Math.ceil(search.length / rowsPerPage));\r\n    } else {\r\n      // On search empty put everything back to initial stage\r\n      setItems(rows);\r\n      setPage(1);\r\n      setCount(Math.ceil(rows.length / rowsPerPage));\r\n    }\r\n  };\r\n  const handleFilterChange = event => {\r\n    setFilter(event.target.value);\r\n  };\r\n  console.log(handleFilterChange);\r\n  const renderTableColumns = () => {\r\n    let nColumn = null;\r\n    let nActions = null;\r\n    let nEmoji = null;\r\n    console.log(nEmoji);\r\n\r\n    const nColumns = columns.map(column => {\r\n      nColumn = column;\r\n\r\n      return (\r\n        <TableCell\r\n          key={column.id + id}\r\n          align={column.align}\r\n          style={{ minWidth: column.minWidth, fontSize: column.fontSize }}\r\n        >\r\n          {column.label}\r\n        </TableCell>\r\n      );\r\n    });\r\n\r\n    if (actions) {\r\n      nActions = (\r\n        <TableCell\r\n          key={nColumn.id + id}\r\n          align={nColumn.align}\r\n          style={{ minWidth: nColumn.minWidth, fontSize: nColumn.fontSize }}\r\n        >\r\n          Actions\r\n        </TableCell>\r\n      );\r\n    }\r\n    // if (withEmoji) {\r\n    //   nEmoji = (\r\n    //     <TableCell\r\n    //       key={nColumn.id + id}\r\n    //       align={nColumn.align}\r\n    //       style={{ minWidth: nColumn.minWidth }}\r\n    //     >\r\n    //       Preview\r\n    //     </TableCell>\r\n    //   );\r\n    // }\r\n    return (\r\n      <TableRow>\r\n        {nColumns}\r\n        {nActions}\r\n      </TableRow>\r\n    );\r\n  };\r\n  const renderTableRows = () => {\r\n    let nColumn = null;\r\n    return items\r\n      .slice((page - 1) * rowsPerPage, (page - 1) * rowsPerPage + rowsPerPage)\r\n      .map(row => {\r\n        return (\r\n          <StyledTableRow role=\"checkbox\" tabIndex={-1} key={row.id + 'Row'}>\r\n            {columns.map(column => {\r\n              nColumn = column;\r\n              const value = row[column.id];\r\n\r\n              return (\r\n                <TableCell\r\n                  key={column.id + 'Cell' + id}\r\n                  align={column.align}\r\n                  className={classes.cell}\r\n                  style={{\r\n                     color: column.color(value),\r\n                    // color: 'blue'\r\n                  }}\r\n                >\r\n                  {column.type && column.type === 'link' ? (\r\n                    <div\r\n                      color=\"inherit\"\r\n                      onClick={e => handleLinkClick(e, row)}\r\n                      style={{ cursor: 'pointer' }}\r\n                    >\r\n                      {value}\r\n                    </div>\r\n                  ) : column.type && column.type === 'image' ? (\r\n                    <span\r\n                      style={{\r\n                        display: 'inline-flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <Avatar src={row.src && row.src} className=\"small\" />{''}\r\n                      <span className=\"px-4\">{value}</span>\r\n                    </span>\r\n                  ) : (\r\n                    value\r\n                  )}\r\n                </TableCell>\r\n              );\r\n            })}\r\n            {actions ? (\r\n              <TableCell key={nColumn.id + 'Cell'} align={nColumn.align}>\r\n                {actions.map((action, i) => {\r\n                  return (\r\n                    <IconButton\r\n                      key={i + 'Action' + id}\r\n                      aria-label=\"upload picture\"\r\n                      component=\"span\"\r\n                      style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                      onClick={e =>\r\n                        handleActionClick(e, { type: action, ...row })\r\n                      }\r\n                    >\r\n                      {getActionIconType(action, i)}\r\n                    </IconButton>\r\n                  );\r\n                })}\r\n              </TableCell>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </StyledTableRow>\r\n        );\r\n      });\r\n  };\r\n\r\n  const getActionIconType = (type, index) => {\r\n    switch (type) {\r\n      case 'delete':\r\n        return <Icon.Trash2 key={index} color=\"red\" />;\r\n      case 'edit':\r\n        return <Icon.Edit key={index} color=\"black\" />;\r\n      case 'play':\r\n        return <Icon.PlayCircle key={index} color=\"black\" />;\r\n      case 'pause':\r\n        return <Icon.PauseCircle key={index} color=\"black\" />;\r\n      case 'attachment':\r\n        return <Icon.Paperclip key={index} color=\"blue\" />;\r\n      case 'correct':\r\n        return <Icon.CheckCircle key={index} color=\"green\" />;\r\n      case 'close':\r\n        return <Icon.XCircle key={index} color=\"red\" />;\r\n      default: \r\n      return null\r\n    }\r\n  };\r\n  return (\r\n    <Grid container={true} className=\"w-full\" style={{display:'flex', flexDirection:'column'}}>\r\n      <Grid item>\r\n        <Grid container={true} justify=\"space-between\" alignItems=\"flex-start\">\r\n          <Grid item>\r\n            {search ? <Search handleSearchChange={handleSearchChange} /> : ''}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <Paper elevation={1}>\r\n          <TableContainer className={classes.container}>\r\n            <Table>\r\n              <TableHead className={classes.table_head}>\r\n                {renderTableColumns()}\r\n              </TableHead>\r\n              <TableBody ref={refs}>{renderTableRows()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          alignItems=\"flex-start\"\r\n          className={classes.paginationContainer}\r\n        >\r\n          <Grid item>\r\n            {pagination ? (\r\n              <Pagination\r\n                color=\"secondary\"\r\n                shape=\"rounded\"\r\n                count={count}\r\n                page={page}\r\n                showFirstButton\r\n                showLastButton\r\n                onChange={handleChange}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            {pagerows ? (\r\n              <FormControl\r\n                className={classes.rowPageContainer}\r\n                style={{ padding: 15 }}\r\n              >\r\n                <Select\r\n                  labelId=\"customized-select-label\"\r\n                  id=\"customized-select\"\r\n                  value={rowsPerPage}\r\n                  IconComponent={iconComponent}\r\n                  onChange={handleChangeRowsPerPage}\r\n                  input={<BootstrapInput />}\r\n                >\r\n                  <MenuItem value={5}>5</MenuItem>\r\n                  <MenuItem value={10}>10</MenuItem>\r\n                  <MenuItem value={20}>20</MenuItem>\r\n                  <MenuItem value={30}>30</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as ActionType from '../../Types';\r\nimport { getDataWithToken, postDataWithToken } from '../../Services';\r\n\r\n// superadmin-client actions\r\nconst onGetClient = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_CLIENT_SUCCESS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst onGetClientDetails = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_CLIENT_DETAILS_SUCCESS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst onUpdateClientSubscription = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_UPDATE_CLIENT_SUBSRCIPTION,\r\n    payload\r\n  }\r\n}\r\n\r\nconst onGetAllDocuments = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_ALL_DOCUMENTS,\r\n    payload\r\n  }\r\n}\r\n\r\nconst onGetDocumentsSentToUser = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_DOCUMENTS_SENT,\r\n    payload\r\n  }\r\n}\r\n\r\nconst onGetDocumentsReceivedFromUser = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_DOCUMENTS_RECEIVED,\r\n    payload\r\n  }\r\n}\r\n\r\nconst onGetAllRequests = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_ALL_REQUESTS,\r\n    payload\r\n  }\r\n}\r\n\r\n// admin-client actions\r\nconst onAdminGetClients = payload => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_CLIENTS,\r\n    payload\r\n  }\r\n}\r\n\r\nconst onUploadDoc = (payload) => {\r\n  return { \r\n    type: ActionType.ADMIN_UPLOAD_DOC,\r\n    payload\r\n  }\r\n}\r\n\r\nconst onGetAppoinments =(payload) => {\r\n  return {\r\n    type: ActionType.ADMIN_GET_APPOINTMENTS,\r\n    payload\r\n  }\r\n}\r\n\r\nconst onConfirmAppoinment = (payload) => {\r\n  return {\r\n    type: ActionType.ADMIN_CONFRIM_APPOINTMENT,\r\n    payload\r\n  }\r\n}\r\n\r\n// const onLogin = payload => {\r\n//   return {\r\n//     type: ActionType.ADMIN_LOGIN_SUCCESS,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\n\r\n// export const onForgotPassword = payload => {\r\n//   return {\r\n//     type: ActionType.ADMIN_FORGOT_PASSWORD_SUCCESS,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\n// get clients under admin\r\nexport const adminGetClients = url => {\r\n  return getDataWithToken(url, onAdminGetClients);\r\n}\r\n// admin get clients appointments under admin\r\nexport const getAppointments = url => {\r\n  return getDataWithToken(url, onGetAppoinments);\r\n}\r\n// admin confirm client appointment \r\nexport const confirmAppointment = (url, payload) => {\r\n  return postDataWithToken(url, payload, onConfirmAppoinment);\r\n}\r\n\r\n// superadmin get all clients\r\nexport const getClient = url => {\r\n  return getDataWithToken(url, onGetClient);\r\n};\r\n\r\nexport const getClientDetails = url => {\r\n  return getDataWithToken(url, onGetClientDetails);\r\n};\r\n\r\nexport const updateClientSubscription = (url, payload) => {\r\n  return postDataWithToken(url, payload, onUpdateClientSubscription);\r\n}\r\n\r\nexport const getAllDocuments = (url) => {\r\n  return getDataWithToken(url, onGetAllDocuments)\r\n}\r\n\r\nexport const getDocumentsSentToUser = (url) => {\r\n  return getDataWithToken(url, onGetDocumentsSentToUser)\r\n}\r\n\r\nexport const getDocumentsReceivedFromUser = (url) => {\r\n  return getDataWithToken(url, onGetDocumentsReceivedFromUser)\r\n}\r\n\r\nexport const getAllRequests = (url) => {\r\n  return getDataWithToken(url, onGetAllRequests);\r\n}\r\n\r\nexport const uploadDoc = (url, payload) =>{\r\n  return postDataWithToken(url, payload, onUploadDoc)\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Page from 'components/Page';\r\nimport CustomTable from '../../components/table/CustomTable';\r\nimport PageSpinner from '../../components/PageSpinner';\r\nimport { getDocumentsSentToUser } from '../../actions/admin/clients/Clients';\r\nimport { adminGetDocumentsSentToUser } from '../../apiConstants/apiConstants';\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function AdminSentDocuments() {\r\n  const dispatch = useDispatch();\r\n  const adminGetSentDocuments = useSelector(\r\n    state => state.adminGetSentDocuments,\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getDocumentsSentToUser(adminGetDocumentsSentToUser));\r\n  }, []);\r\n\r\n  const getRows = documents => {\r\n    let rows = [];\r\n    documents &&\r\n      documents.reverse().map((document, i) => { \r\n        let client;\r\n        if (document.receiver) {\r\n          client = document.receiver.companyName;\r\n        }\r\n         return rows.push({\r\n          id: i + 1,\r\n          client: client || 'null',\r\n          docName: document.docName,\r\n          date: document.created_dt,\r\n          view: (\r\n            <Button\r\n              color=\"secondary\"\r\n              size=\"sm\"\r\n              className=\"p-1\"\r\n              style={{ fontSize: '.9rem', minWidth: '110px' }}\r\n              href={document.attachedFileUrl}\r\n              target=\"_blank\"\r\n            >\r\n              View\r\n            </Button>\r\n          ),\r\n        })}\r\n      );\r\n    return rows;\r\n  };\r\n\r\n  if (!adminGetSentDocuments.isSuccessful) {\r\n    return <PageSpinner />;\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      className=\"DashboardPage\"\r\n      title=\"Dashboard\"\r\n      breadcrumbs={[{ name: 'Documents', active: true }]}\r\n    >\r\n      <div className=\"links\">\r\n        <Link className=\"active\" to=\"/admin/documents/received\">\r\n          View received documents\r\n        </Link>\r\n      </div>\r\n      <div\r\n        style={{\r\n          overflowX: 'auto',\r\n        }}\r\n      >\r\n        <CustomTable\r\n          pagination\r\n          pagerows\r\n          columns={[\r\n            {\r\n              id: 'id',\r\n              align: 'center',\r\n              label: 'ID',\r\n              minWidth: 20,\r\n              color: value => 'blue',\r\n            },\r\n            {\r\n              id: 'client',\r\n              label: 'client',\r\n              align: 'center',\r\n              minWidth: 100,\r\n              color: value => 'blue',\r\n            },\r\n            {\r\n              id: 'docName',\r\n              align: 'center',\r\n              label: 'Document Name',\r\n              minWidth: 100,\r\n              color: value => 'blue',\r\n            },\r\n            {\r\n              id: 'date',\r\n              align: 'center',\r\n              label: 'Date',\r\n              minWidth: 100,\r\n              color: value => 'blue',\r\n            },\r\n            {\r\n              id: 'view',\r\n              align: 'center',\r\n              label: 'Action',\r\n              minWidth: 100,\r\n              color: value => 'blue',\r\n            },\r\n          ]}\r\n          rows={getRows(adminGetSentDocuments.documents)}\r\n        />\r\n      </div>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}